{"Typealiases.html#/s:12SwiftletData8ADRecorda":{"name":"ADRecord","abstract":"<p>Defines a <code>ADRecord</code> as a dictionary of <strong>Key/Value</strong> pairs where the <strong>Key</strong> is a <code>String</code> and the <strong>Value</strong> is <code>Any</code> type. A <code>ADRecord</code> can be returned from or sent to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataProvider.html\">ADDataProvider</a></code> or any of the <strong>Action Codable</strong> controls.</p>"},"Typealiases.html#/s:12SwiftletData11ADRecordSeta":{"name":"ADRecordSet","abstract":"<p>Defines an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> instances that can be sent to or returned from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataProvider.html\">ADDataProvider</a></code> or any of the <strong>Action Codable</strong> controls.</p>"},"Structs/ADSQLTableConstraint/TableConstraintType.html#/s:12SwiftletData20ADSQLTableConstraintV05TableD4TypeO10primaryKeyyA2EmF":{"name":"primaryKey","abstract":"<p>A <code>PrimaryKey(...)</code> constraint.</p>","parent_name":"TableConstraintType"},"Structs/ADSQLTableConstraint/TableConstraintType.html#/s:12SwiftletData20ADSQLTableConstraintV05TableD4TypeO6uniqueyA2EmF":{"name":"unique","abstract":"<p>A unique value constraint.</p>","parent_name":"TableConstraintType"},"Structs/ADSQLTableConstraint/TableConstraintType.html#/s:12SwiftletData20ADSQLTableConstraintV05TableD4TypeO5checkyA2EmF":{"name":"check","abstract":"<p>A custom constraint.</p>","parent_name":"TableConstraintType"},"Structs/ADSQLTableConstraint/TableConstraintType.html#/s:12SwiftletData20ADSQLTableConstraintV05TableD4TypeO10foreignKeyyA2EmF":{"name":"foreignKey","abstract":"<p>A value in the table that is a key to a row in a foreign table.</p>","parent_name":"TableConstraintType"},"Structs/ADSQLTableConstraint/TableConstraintType.html":{"name":"TableConstraintType","abstract":"<p>The type of the constraint.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLTableConstraint.html#/s:12SwiftletData20ADSQLTableConstraintV4typeAC05TableD4TypeOvp":{"name":"type","abstract":"<p>The type of the table constraint.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLTableConstraint.html#/s:12SwiftletData20ADSQLTableConstraintV16conflictHandlingAA013ADSQLConflictF0Ovp":{"name":"conflictHandling","abstract":"<p>The type of conflict handling for this table constraint.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLTableConstraint.html#/s:12SwiftletData20ADSQLTableConstraintV10expressionAA15ADSQLExpression_pSgvp":{"name":"expression","abstract":"<p>The value for a Check constraint.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLTableConstraint.html#/s:12SwiftletData20ADSQLTableConstraintV10columnListSaySSGvp":{"name":"columnList","abstract":"<p>A list of columns that this constraint effects.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLTableConstraint.html#/s:12SwiftletData20ADSQLTableConstraintVACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the table constraint.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLTableConstraint.html#/s:12SwiftletData20ADSQLTableConstraintV6typeOf14withExpressionA2C05TableD4TypeO_AA15ADSQLExpression_pSgtcfc":{"name":"init(typeOf:withExpression:)","abstract":"<p>Initializes a new instance of the table constraint.</p>","parent_name":"ADSQLTableConstraint"},"Structs/ADSQLSetClause.html#/s:12SwiftletData14ADSQLSetClauseV10columnNameSSvp":{"name":"columnName","abstract":"<p>The name of the column getting the new value.</p>","parent_name":"ADSQLSetClause"},"Structs/ADSQLSetClause.html#/s:12SwiftletData14ADSQLSetClauseV10expressionAA15ADSQLExpression_pSgvp":{"name":"expression","abstract":"<p>The value being written to the  column.</p>","parent_name":"ADSQLSetClause"},"Structs/ADSQLResultColumn.html#/s:12SwiftletData17ADSQLResultColumnV10expressionAA15ADSQLExpression_pSgvp":{"name":"expression","abstract":"<p>The value of the column as either a calculated expression or a literal column name.</p>","parent_name":"ADSQLResultColumn"},"Structs/ADSQLResultColumn.html#/s:12SwiftletData17ADSQLResultColumnV11columnAliasSSvp":{"name":"columnAlias","abstract":"<p>An optional alias for the column value returned.</p>","parent_name":"ADSQLResultColumn"},"Structs/ADSQLResultColumn.html#/s:12SwiftletData17ADSQLResultColumnV4withAcA15ADSQLExpression_p_tcfc":{"name":"init(with:)","abstract":"<p>Undocumented</p>","parent_name":"ADSQLResultColumn"},"Structs/ADSQLOrderByClause/Order.html#/s:12SwiftletData18ADSQLOrderByClauseV5OrderO9ascendingyA2EmF":{"name":"ascending","abstract":"<p>Sort values in ascending order.</p>","parent_name":"Order"},"Structs/ADSQLOrderByClause/Order.html#/s:12SwiftletData18ADSQLOrderByClauseV5OrderO10descendingyA2EmF":{"name":"descending","abstract":"<p>Sort values in a descending order.</p>","parent_name":"Order"},"Structs/ADSQLOrderByClause/Order.html":{"name":"Order","abstract":"<p>The direction of the column sort.</p>","parent_name":"ADSQLOrderByClause"},"Structs/ADSQLOrderByClause.html#/s:12SwiftletData18ADSQLOrderByClauseV10columnNameSSvp":{"name":"columnName","abstract":"<p>The name of the column used to order the results.</p>","parent_name":"ADSQLOrderByClause"},"Structs/ADSQLOrderByClause.html#/s:12SwiftletData18ADSQLOrderByClauseV13collationNameSSvp":{"name":"collationName","abstract":"<p>The optional colation name.</p>","parent_name":"ADSQLOrderByClause"},"Structs/ADSQLOrderByClause.html#/s:12SwiftletData18ADSQLOrderByClauseV5orderAC5OrderOvp":{"name":"order","abstract":"<p>The sort or for the results.</p>","parent_name":"ADSQLOrderByClause"},"Structs/ADSQLOrderByClause.html#/s:12SwiftletData18ADSQLOrderByClauseV2onACSS_tcfc":{"name":"init(on:)","abstract":"<p>Undocumented</p>","parent_name":"ADSQLOrderByClause"},"Structs/ADSQLColumnDefinition.html#/s:12SwiftletData21ADSQLColumnDefinitionV4nameSSvp":{"name":"name","abstract":"<p>The column name.</p>","parent_name":"ADSQLColumnDefinition"},"Structs/ADSQLColumnDefinition.html#/s:12SwiftletData21ADSQLColumnDefinitionV5aliasSSvp":{"name":"alias","abstract":"<p>The optional column alias.</p>","parent_name":"ADSQLColumnDefinition"},"Structs/ADSQLColumnDefinition.html#/s:12SwiftletData21ADSQLColumnDefinitionV4typeAA0C4TypeOvp":{"name":"type","abstract":"<p>The type of information stored in the column as defined by a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/ADSQLColumnType.html\">ADSQLColumnType</a></code>.</p>","parent_name":"ADSQLColumnDefinition"},"Structs/ADSQLColumnDefinition.html#/s:12SwiftletData21ADSQLColumnDefinitionV11constraintsSayAA0C10ConstraintVGvp":{"name":"constraints","abstract":"<p>A list of optional constraints for the column.</p>","parent_name":"ADSQLColumnDefinition"},"Structs/ADSQLColumnDefinition.html#/s:12SwiftletData21ADSQLColumnDefinitionVACycfc":{"name":"init()","abstract":"<p>Creates a new instance of the column definition.</p>","parent_name":"ADSQLColumnDefinition"},"Structs/ADSQLColumnDefinition.html#/s:12SwiftletData21ADSQLColumnDefinitionV10columnNameACSS_tcfc":{"name":"init(columnName:)","abstract":"<p>Creates a new instance of the column definition.</p>","parent_name":"ADSQLColumnDefinition"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO13primaryKeyAscyA2EmF":{"name":"primaryKeyAsc","abstract":"<p>The column is the primary key for the table in an ascending order.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO14primaryKeyDescyA2EmF":{"name":"primaryKeyDesc","abstract":"<p>The column is the primary key for the table in a descending order.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO7notNullyA2EmF":{"name":"notNull","abstract":"<p>The column&rsquo;s value cannot be NULL.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO6uniqueyA2EmF":{"name":"unique","abstract":"<p>The column&rsquo;s value must be unique inside the table.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO5checkyA2EmF":{"name":"check","abstract":"<p>A custom constraint is being applied to the columns value.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO12defaultValueyA2EmF":{"name":"defaultValue","abstract":"<p>If this column is NULL, it will be replaced with this default value.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO7collateyA2EmF":{"name":"collate","abstract":"<p>The columns has a collation constraint.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html#/s:12SwiftletData21ADSQLColumnConstraintV06ColumnD4TypeO10foreignKeyyA2EmF":{"name":"foreignKey","abstract":"<p>The column value is a foreign key to another table&rsquo;s row.</p>","parent_name":"ColumnConstraintType"},"Structs/ADSQLColumnConstraint/ColumnConstraintType.html":{"name":"ColumnConstraintType","abstract":"<p>Defines the type of column constraint.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLColumnConstraint.html#/s:12SwiftletData21ADSQLColumnConstraintV4typeAC06ColumnD4TypeOvp":{"name":"type","abstract":"<p>The type of the constraint.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLColumnConstraint.html#/s:12SwiftletData21ADSQLColumnConstraintV13autoIncrementSbvp":{"name":"autoIncrement","abstract":"<p>If the column is a PRIMARY KEY of the INTEGER type, is it automatically incremented when a new row is created in the table.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLColumnConstraint.html#/s:12SwiftletData21ADSQLColumnConstraintV16conflictHandlingAA013ADSQLConflictF0Ovp":{"name":"conflictHandling","abstract":"<p>Defines how conflicts should be handled for this column.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLColumnConstraint.html#/s:12SwiftletData21ADSQLColumnConstraintV10expressionAA15ADSQLExpression_pSgvp":{"name":"expression","abstract":"<p>Holds the expression for a Check or Default Value constraint.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLColumnConstraint.html#/s:12SwiftletData21ADSQLColumnConstraintVACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the Column Constraint.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLColumnConstraint.html#/s:12SwiftletData21ADSQLColumnConstraintV6ofType14withExpressionA2C06ColumndF0O_AA15ADSQLExpression_pSgtcfc":{"name":"init(ofType:withExpression:)","abstract":"<p>Initializes a new instance of the Column Constraint.</p>","parent_name":"ADSQLColumnConstraint"},"Structs/ADSQLUpdateInstruction/Action.html#/s:12SwiftletData22ADSQLUpdateInstructionV6ActionO6updateyA2EmF":{"name":"update","abstract":"<p>Attempt to update a row in the table.</p>","parent_name":"Action"},"Structs/ADSQLUpdateInstruction/Action.html#/s:12SwiftletData22ADSQLUpdateInstructionV6ActionO16updateOrRollbackyA2EmF":{"name":"updateOrRollback","abstract":"<p>Attempt to update a row in the table and rollback if unable to update.</p>","parent_name":"Action"},"Structs/ADSQLUpdateInstruction/Action.html#/s:12SwiftletData22ADSQLUpdateInstructionV6ActionO13updateOrAbortyA2EmF":{"name":"updateOrAbort","abstract":"<p>Attempt to update a row in the table and abort if unable to update.</p>","parent_name":"Action"},"Structs/ADSQLUpdateInstruction/Action.html#/s:12SwiftletData22ADSQLUpdateInstructionV6ActionO15updateOrReplaceyA2EmF":{"name":"updateOrReplace","abstract":"<p>Attempt to update or replace a row in the table.</p>","parent_name":"Action"},"Structs/ADSQLUpdateInstruction/Action.html#/s:12SwiftletData22ADSQLUpdateInstructionV6ActionO12updateOrFailyA2EmF":{"name":"updateOrFail","abstract":"<p>Attempt to update a row in the table and fail if unable to update.</p>","parent_name":"Action"},"Structs/ADSQLUpdateInstruction/Action.html#/s:12SwiftletData22ADSQLUpdateInstructionV6ActionO14updateOrIgnoreyA2EmF":{"name":"updateOrIgnore","abstract":"<p>Attempt to update a row in the table and ignore the issue if unable to update.</p>","parent_name":"Action"},"Structs/ADSQLUpdateInstruction/Action.html":{"name":"Action","abstract":"<p>Undocumented</p>","parent_name":"ADSQLUpdateInstruction"},"Structs/ADSQLUpdateInstruction.html#/s:12SwiftletData22ADSQLUpdateInstructionV6actionAC6ActionOvp":{"name":"action","abstract":"<p>The type of update to perform.</p>","parent_name":"ADSQLUpdateInstruction"},"Structs/ADSQLUpdateInstruction.html#/s:12SwiftletData22ADSQLUpdateInstructionV9tableNameSSvp":{"name":"tableName","abstract":"<p>The name of the table being updated.</p>","parent_name":"ADSQLUpdateInstruction"},"Structs/ADSQLUpdateInstruction.html#/s:12SwiftletData22ADSQLUpdateInstructionV10setClausesSayAA14ADSQLSetClauseVGvp":{"name":"setClauses","abstract":"<p>A list of columns and values being written to the row.</p>","parent_name":"ADSQLUpdateInstruction"},"Structs/ADSQLUpdateInstruction.html#/s:12SwiftletData22ADSQLUpdateInstructionV15whereExpressionAA15ADSQLExpression_pSgvp":{"name":"whereExpression","abstract":"<p>An optional expression controlling the rows to update.</p>","parent_name":"ADSQLUpdateInstruction"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO13beginDeferredyA2EmF":{"name":"beginDeferred","abstract":"<p>A begin deffered transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO14beginImmediateyA2EmF":{"name":"beginImmediate","abstract":"<p>A begin immediate transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO14beginExclusiveyA2EmF":{"name":"beginExclusive","abstract":"<p>A begin exclusive transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO6commityA2EmF":{"name":"commit","abstract":"<p>A commit (or end) transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO8rollbackyA2EmF":{"name":"rollback","abstract":"<p>A rollback transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO9savepointyA2EmF":{"name":"savepoint","abstract":"<p>A create savepoint transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html#/s:12SwiftletData27ADSQLTransactionInstructionV6ActionO16releaseSavepointyA2EmF":{"name":"releaseSavepoint","abstract":"<p>A release savepoint transaction.</p>","parent_name":"Action"},"Structs/ADSQLTransactionInstruction/Action.html":{"name":"Action","abstract":"<p>Defines the type of transaction being performed.</p>","parent_name":"ADSQLTransactionInstruction"},"Structs/ADSQLTransactionInstruction.html#/s:12SwiftletData27ADSQLTransactionInstructionV6actionAC6ActionOvp":{"name":"action","abstract":"<p>Defined the type of transaction.</p>","parent_name":"ADSQLTransactionInstruction"},"Structs/ADSQLTransactionInstruction.html#/s:12SwiftletData27ADSQLTransactionInstructionV13savepointNameSSvp":{"name":"savepointName","abstract":"<p>For ROLLBACK, SAVEPOINT and RELEASE transactions, defines the name of the save point.</p>","parent_name":"ADSQLTransactionInstruction"},"Structs/ADSQLTransactionInstruction.html#/s:12SwiftletData27ADSQLTransactionInstructionVACycfc":{"name":"init()","abstract":"<p>Creates a new instance of the transaction.</p>","parent_name":"ADSQLTransactionInstruction"},"Structs/ADSQLTransactionInstruction.html#/s:12SwiftletData27ADSQLTransactionInstructionV9forActionA2C0F0O_tcfc":{"name":"init(forAction:)","abstract":"<p>Creates a new instance of the transaction.</p>","parent_name":"ADSQLTransactionInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV8distinctSbvp":{"name":"distinct","abstract":"<p>If <code>true</code>, a distince set of values will be returned, else <code>false</code>.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV7columnsSayAA17ADSQLResultColumnVGvp":{"name":"columns","abstract":"<p>The list of columns returned by this select statement.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV9fromSouceAA15ADSQLJoinClauseCvp":{"name":"fromSouce","abstract":"<p>The source table (or tables) that the columns are read from.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV15whereExpressionAA15ADSQLExpression_pSgvp":{"name":"whereExpression","abstract":"<p>The WHERE clause defining which table rows should be returned. If this expression if <code>nil</code>, all rows will be returned.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV14groupByColumnsSaySSGvp":{"name":"groupByColumns","abstract":"<p>An optional GROUP BY clause used to group the results of the SELECT statement.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV16havingExpressionAA15ADSQLExpression_pSgvp":{"name":"havingExpression","abstract":"<p>An optional HAVING clause to control when specific columns should be grouped.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV7orderBySayAA010ADSQLOrderF6ClauseVGvp":{"name":"orderBy","abstract":"<p>An optional group of columns used to sort the resulting table rows.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV5limitSivp":{"name":"limit","abstract":"<p>Defines the maximum number of rows returned. If <code>-1</code>, all rows will be returned.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLSelectInstruction.html#/s:12SwiftletData22ADSQLSelectInstructionV6offsetSivp":{"name":"offset","abstract":"<p>Defines an offest from the first row to start returning rows for. If <code>-1</code>, the results start with the first row.</p>","parent_name":"ADSQLSelectInstruction"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO6insertyA2EmF":{"name":"insert","abstract":"<p>Attempt to insert a new row.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO7replaceyA2EmF":{"name":"replace","abstract":"<p>Attempt to replace an existing row.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO15insertOrReplaceyA2EmF":{"name":"insertOrReplace","abstract":"<p>Either insert a new or replace an existing row.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO16insertOrRollbackyA2EmF":{"name":"insertOrRollback","abstract":"<p>Attempt to insert a new row and rollback if the row cannot be created.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO13insertOrAbortyA2EmF":{"name":"insertOrAbort","abstract":"<p>Attempt to insert a new row and abort if the row cannot be created.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO12insertOrFailyA2EmF":{"name":"insertOrFail","abstract":"<p>Attempt to insert a new row and fail if the row cannot be created.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html#/s:12SwiftletData22ADSQLInsertInstructionV6ActionO14insertOrIgnoreyA2EmF":{"name":"insertOrIgnore","abstract":"<p>Attempt to insert a new row and ignore the issue if the row cannot be created.</p>","parent_name":"Action"},"Structs/ADSQLInsertInstruction/Action.html":{"name":"Action","abstract":"<p>Undocumented</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLInsertInstruction.html#/s:12SwiftletData22ADSQLInsertInstructionV6actionAC6ActionOvp":{"name":"action","abstract":"<p>The type of insert to perform.</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLInsertInstruction.html#/s:12SwiftletData22ADSQLInsertInstructionV9tableNameSSvp":{"name":"tableName","abstract":"<p>The name of the table that a row is being inserted into.</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLInsertInstruction.html#/s:12SwiftletData22ADSQLInsertInstructionV11columnNamesSaySSGvp":{"name":"columnNames","abstract":"<p>The name of the columns being inserted into the table row.</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLInsertInstruction.html#/s:12SwiftletData22ADSQLInsertInstructionV6valuesSayAA15ADSQLExpression_pGvp":{"name":"values","abstract":"<p>The values to insert into the table row.</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLInsertInstruction.html#/s:12SwiftletData22ADSQLInsertInstructionV15selectStatementAA011ADSQLSelectD0VSgvp":{"name":"selectStatement","abstract":"<p>An optional SELECT statement used to populate the new table row(s).</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLInsertInstruction.html#/s:12SwiftletData22ADSQLInsertInstructionV13defaultValuesSbvp":{"name":"defaultValues","abstract":"<p>If <code>true</code>, the new row should be created with the default value of the table.</p>","parent_name":"ADSQLInsertInstruction"},"Structs/ADSQLDropInstruction/Action.html#/s:12SwiftletData20ADSQLDropInstructionV6ActionO5tableyA2EmF":{"name":"table","abstract":"<p>Drops a table.</p>","parent_name":"Action"},"Structs/ADSQLDropInstruction/Action.html#/s:12SwiftletData20ADSQLDropInstructionV6ActionO7triggeryA2EmF":{"name":"trigger","abstract":"<p>Drops a trigger.</p>","parent_name":"Action"},"Structs/ADSQLDropInstruction/Action.html#/s:12SwiftletData20ADSQLDropInstructionV6ActionO4viewyA2EmF":{"name":"view","abstract":"<p>Drops a view.</p>","parent_name":"Action"},"Structs/ADSQLDropInstruction/Action.html":{"name":"Action","abstract":"<p>Defines the type of object being removed from the data source.</p>","parent_name":"ADSQLDropInstruction"},"Structs/ADSQLDropInstruction.html#/s:12SwiftletData20ADSQLDropInstructionV6actionAC6ActionOvp":{"name":"action","abstract":"<p>Defines what is being removed from the data source.</p>","parent_name":"ADSQLDropInstruction"},"Structs/ADSQLDropInstruction.html#/s:12SwiftletData20ADSQLDropInstructionV8ifExistsSbvp":{"name":"ifExists","abstract":"<p>If <code>true</code>, the item will only be dropped if it exists in the data source.</p>","parent_name":"ADSQLDropInstruction"},"Structs/ADSQLDropInstruction.html#/s:12SwiftletData20ADSQLDropInstructionV8itemNameSSvp":{"name":"itemName","abstract":"<p>The name of the item being removed from the data source.</p>","parent_name":"ADSQLDropInstruction"},"Structs/ADSQLDeleteInstruction.html#/s:12SwiftletData22ADSQLDeleteInstructionV9tableNameSSvp":{"name":"tableName","abstract":"<p>The name of the table that rows will be deleted from.</p>","parent_name":"ADSQLDeleteInstruction"},"Structs/ADSQLDeleteInstruction.html#/s:12SwiftletData22ADSQLDeleteInstructionV15whereExpressionAA15ADSQLExpression_pSgvp":{"name":"whereExpression","abstract":"<p>An optional WHERE clause used to determine the rows of the table to delete. If <code>nil</code> all rows in the table will be deleted.</p>","parent_name":"ADSQLDeleteInstruction"},"Structs/ADSQLCreateViewInstruction.html#/s:12SwiftletData26ADSQLCreateViewInstructionV8viewNameSSvp":{"name":"viewName","abstract":"<p>The name of the view being created.</p>","parent_name":"ADSQLCreateViewInstruction"},"Structs/ADSQLCreateViewInstruction.html#/s:12SwiftletData26ADSQLCreateViewInstructionV10columnListSaySSGvp":{"name":"columnList","abstract":"<p>The list of columns in the view.</p>","parent_name":"ADSQLCreateViewInstruction"},"Structs/ADSQLCreateViewInstruction.html#/s:12SwiftletData26ADSQLCreateViewInstructionV15selectStatementAA011ADSQLSelectE0VSgvp":{"name":"selectStatement","abstract":"<p>The SQL SELECT statement used to populate the view.</p>","parent_name":"ADSQLCreateViewInstruction"},"Structs/ADSQLCreateTriggerInstruction/TriggerType.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV0D4TypeO6deleteyA2EmF":{"name":"delete","abstract":"<p>The triger will fire on delete statements.</p>","parent_name":"TriggerType"},"Structs/ADSQLCreateTriggerInstruction/TriggerType.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV0D4TypeO6insertyA2EmF":{"name":"insert","abstract":"<p>The trigger will fire on insert statements.</p>","parent_name":"TriggerType"},"Structs/ADSQLCreateTriggerInstruction/TriggerType.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV0D4TypeO8updateOfyA2EmF":{"name":"updateOf","abstract":"<p>The trigger will fire on update statements.</p>","parent_name":"TriggerType"},"Structs/ADSQLCreateTriggerInstruction/WhenToTrigger.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV06WhenToD0O6beforeyA2EmF":{"name":"before","abstract":"<p>The trigger will execute before the SQL statement.</p>","parent_name":"WhenToTrigger"},"Structs/ADSQLCreateTriggerInstruction/WhenToTrigger.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV06WhenToD0O5afteryA2EmF":{"name":"after","abstract":"<p>The trigger will execute after the SQL statement.</p>","parent_name":"WhenToTrigger"},"Structs/ADSQLCreateTriggerInstruction/WhenToTrigger.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV06WhenToD0O9insteadOfyA2EmF":{"name":"insteadOf","abstract":"<p>The trigger will execute instead of the SQL statement.</p>","parent_name":"WhenToTrigger"},"Structs/ADSQLCreateTriggerInstruction/WhenToTrigger.html":{"name":"WhenToTrigger","abstract":"<p>Defines when a triger should be fired.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction/TriggerType.html":{"name":"TriggerType","abstract":"<p>Defines the trigger&rsquo;s type.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV11triggerNameSSvp":{"name":"triggerName","abstract":"<p>The name of the trigger being created.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV11triggerWhenAC0g2ToD0Ovp":{"name":"triggerWhen","abstract":"<p>Defines when the trigger should fire.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV11triggerTypeAC0dG0Ovp":{"name":"triggerType","abstract":"<p>Defines the type of trigger being created.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV10columnListSaySSGvp":{"name":"columnList","abstract":"<p>Defines the list of columns that form the trigger.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV9tableNameSSvp":{"name":"tableName","abstract":"<p>Defines the table that the trigger is being created against.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV10forEachRowSbvp":{"name":"forEachRow","abstract":"<p>If <code>true</code>, the trigger will execute after each table row being modified by a SQL statement.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV14whenExpressionAA15ADSQLExpression_pSgvp":{"name":"whenExpression","abstract":"<p>The expression defining when the trigger will fire.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTriggerInstruction.html#/s:12SwiftletData29ADSQLCreateTriggerInstructionV12instructionsSayAA16ADSQLInstruction_pGvp":{"name":"instructions","abstract":"<p>A list of instruction to run when the trigger fires.</p>","parent_name":"ADSQLCreateTriggerInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV4nameSSvp":{"name":"name","abstract":"<p>The name of the table being created.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV11isTemporarySbvp":{"name":"isTemporary","abstract":"<p>If <code>true</code> this is a temporary table, else <code>false</code>.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV11ifNotExistsSbvp":{"name":"ifNotExists","abstract":"<p>If <code>true</code> the table should only be created if it doesn&rsquo;t already exist, else <code>false</code>.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV7columnsSayAA21ADSQLColumnDefinitionVGvp":{"name":"columns","abstract":"<p>A list of columns being created in the table.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV11constraintsSayAA20ADSQLTableConstraintVGvp":{"name":"constraints","abstract":"<p>An optional list of constraints being applied to the table.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV12withoutRowIDSbvp":{"name":"withoutRowID","abstract":"<p>If <code>true</code> the table does not have an internal row id, else <code>false</code>.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV15selectStatementAA011ADSQLSelectE0VSgvp":{"name":"selectStatement","abstract":"<p>If this is a CREATE TABLE name AS SELECT&hellip; statement, this property holds the SELECT statement.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionVACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the Create Table Instruction.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateTableInstruction.html#/s:12SwiftletData27ADSQLCreateTableInstructionV9tableName__ACSS_S2btcfc":{"name":"init(tableName:_:_:)","abstract":"<p>Initializes a new instance of the Create Table Instruction.</p>","parent_name":"ADSQLCreateTableInstruction"},"Structs/ADSQLCreateIndexInstruction.html#/s:12SwiftletData27ADSQLCreateIndexInstructionV10makeUniqueSbvp":{"name":"makeUnique","abstract":"<p>If <code>true</code> the index is unique, else <code>false</code>.</p>","parent_name":"ADSQLCreateIndexInstruction"},"Structs/ADSQLCreateIndexInstruction.html#/s:12SwiftletData27ADSQLCreateIndexInstructionV9indexNameSSvp":{"name":"indexName","abstract":"<p>The name of the index being created.</p>","parent_name":"ADSQLCreateIndexInstruction"},"Structs/ADSQLCreateIndexInstruction.html#/s:12SwiftletData27ADSQLCreateIndexInstructionV9tableNameSSvp":{"name":"tableName","abstract":"<p>The name of the table that the index is being created on.</p>","parent_name":"ADSQLCreateIndexInstruction"},"Structs/ADSQLCreateIndexInstruction.html#/s:12SwiftletData27ADSQLCreateIndexInstructionV10columnListSaySSGvp":{"name":"columnList","abstract":"<p>The list of columns in the index.</p>","parent_name":"ADSQLCreateIndexInstruction"},"Structs/ADSQLCreateIndexInstruction.html#/s:12SwiftletData27ADSQLCreateIndexInstructionV15whereExpressionAA15ADSQLExpression_pSgvp":{"name":"whereExpression","abstract":"<p>The optional WHERE clause that controls which table rows are included in the Index.</p>","parent_name":"ADSQLCreateIndexInstruction"},"Structs/ADSQLAlterTableInstruction.html#/s:12SwiftletData26ADSQLAlterTableInstructionV4nameSSvp":{"name":"name","abstract":"<p>The name of the table being modified.</p>","parent_name":"ADSQLAlterTableInstruction"},"Structs/ADSQLAlterTableInstruction.html#/s:12SwiftletData26ADSQLAlterTableInstructionV8renameToSSvp":{"name":"renameTo","abstract":"<p>If renaming the table, this will be the table&rsquo;s new name.</p>","parent_name":"ADSQLAlterTableInstruction"},"Structs/ADSQLAlterTableInstruction.html#/s:12SwiftletData26ADSQLAlterTableInstructionV6columnAA21ADSQLColumnDefinitionVSgvp":{"name":"column","abstract":"<p>The definition of a columns being added.</p>","parent_name":"ADSQLAlterTableInstruction"},"Structs/ADCrossReference.html#/s:St7ElementQa":{"name":"Element","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV05crossD4NameSSvp":{"name":"crossReferenceName","abstract":"<p>The name of the cross reference table.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV11leftKeyNameSSvp":{"name":"leftKeyName","abstract":"<p>The name of the left-side key used to store the primary key of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> on the left side of the relationship.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV12rightKeyNameSSvp":{"name":"rightKeyName","abstract":"<p>The name of the right-side key used to store the primary key of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> on the right side of the relationship.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV7storageSayxGvp":{"name":"storage","abstract":"<p>Stores all child <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instances that are a part of the cross reference relationship to the left-side primary key value.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceVyxSicip":{"name":"subscript(_:)","abstract":"<p>Provides quick access to the items in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV7storageSayxGvp\">storage</a></code> property.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV5countSivp":{"name":"count","abstract":"<p>Returns the number of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instances in the cross reference.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV4name11leftKeyName05rightgH0ACyxGSS_S2Stcfc":{"name":"init(name:leftKeyName:rightKeyName:)","abstract":"<p>Creates a new instance of the <code>ADCrossReference</code> with the given table name and key names.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV4nextxSgyF":{"name":"next()","abstract":"<p>Returns the next item in a sequence.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV6appendyyxF":{"name":"append(_:)","abstract":"<p>Adds the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instance to the cross reference&rsquo;s <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV7storageSayxGvp\">storage</a></code>.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV9removeAllyyF":{"name":"removeAll()","abstract":"<p>Removes all <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instances from the reference&rsquo;s <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV7storageSayxGvp\">storage</a></code>.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV6remove2atySi_tF":{"name":"remove(at:)","abstract":"<p>Removes the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instance from the reference&rsquo;s <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV7storageSayxGvp\">storage</a></code>.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV011ensureCrossD6Exists2in11forKeyValueSbAA14ADDataProvider_p_yptKF":{"name":"ensureCrossReferenceExists(in:forKeyValue:)","abstract":"<p>Ensures the given cross reference table exists in the given data provider and left-side key value and creates it if required.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV6delete4from11forKeyValueyAA14ADDataProvider_p_yptKF":{"name":"delete(from:forKeyValue:)","abstract":"<p>Removes all cross references for the given key value from the given data provider.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV4save2to11forKeyValueyAA14ADDataProvider_p_yptKF":{"name":"save(to:forKeyValue:)","abstract":"<p>Saves the given cross references to the data provider for the give key value. The cross reference table will automatically be created if it doesn&rsquo;t already exist.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html#/s:12SwiftletData16ADCrossReferenceV4load4from11forKeyValueyAA14ADDataProvider_p_yptKF":{"name":"load(from:forKeyValue:)","abstract":"<p>Loads all cross referenced <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instances for the given cross reference based on the given key value.</p>","parent_name":"ADCrossReference"},"Structs/ADCrossReference.html":{"name":"ADCrossReference","abstract":"<p>Creates and maintains a one-to-many or many-to-many cross reference relationship between two <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instances that can be stored in or read from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataProvider.html\">ADDataProvider</a></code>.</p>"},"Structs/ADSQLAlterTableInstruction.html":{"name":"ADSQLAlterTableInstruction","abstract":"<p>Holds the information for a SQL ALTER TABLE instruction.</p>"},"Structs/ADSQLCreateIndexInstruction.html":{"name":"ADSQLCreateIndexInstruction","abstract":"<p>Holds the information for a SQL CREATE INDEX instruction.</p>"},"Structs/ADSQLCreateTableInstruction.html":{"name":"ADSQLCreateTableInstruction","abstract":"<p>Holds information about a SQL CREATE TABLE instruction.</p>"},"Structs/ADSQLCreateTriggerInstruction.html":{"name":"ADSQLCreateTriggerInstruction","abstract":"<p>Holds information about a SQL CREATE TRIGGER instruction.</p>"},"Structs/ADSQLCreateViewInstruction.html":{"name":"ADSQLCreateViewInstruction","abstract":"<p>Holds all the information for a SQL CREATE VIEW instruction.</p>"},"Structs/ADSQLDeleteInstruction.html":{"name":"ADSQLDeleteInstruction","abstract":"<p>Holds all information about a SQL DELETE instruction.</p>"},"Structs/ADSQLDropInstruction.html":{"name":"ADSQLDropInstruction","abstract":"<p>Holds all information about a SQL DROP instruction.</p>"},"Structs/ADSQLInsertInstruction.html":{"name":"ADSQLInsertInstruction","abstract":"<p>Holds all information about a SQL INSERT instruction.</p>"},"Structs/ADSQLSelectInstruction.html":{"name":"ADSQLSelectInstruction","abstract":"<p>Holds all information about a SQL SELECT instruction.</p>"},"Structs/ADSQLTransactionInstruction.html":{"name":"ADSQLTransactionInstruction","abstract":"<p>Holds all information about a SQL BEGIN, COMMIT, END, ROLLBACK, SAVEPOINT or RELEASE instruction.</p>"},"Structs/ADSQLUpdateInstruction.html":{"name":"ADSQLUpdateInstruction","abstract":"<p>Holds all of the information for a SQL UPDATE instruction.</p>"},"Structs/ADSQLColumnConstraint.html":{"name":"ADSQLColumnConstraint","abstract":"<p>Holds information about a constraint applied to a Column Definition that has been parsed from a SQL CREATE TABLE instruction.</p>"},"Structs/ADSQLColumnDefinition.html":{"name":"ADSQLColumnDefinition","abstract":"<p>Holds information about a column definition read from a CREATE TABLE instruction when parsing a SQL statement.</p>"},"Structs/ADSQLOrderByClause.html":{"name":"ADSQLOrderByClause","abstract":"<p>Holds information about a result ordering statement from a SQL SELECT statement.</p>"},"Structs/ADSQLResultColumn.html":{"name":"ADSQLResultColumn","abstract":"<p>Holds a result column definition for a SELECT SQL statement.</p>"},"Structs/ADSQLSetClause.html":{"name":"ADSQLSetClause","abstract":"<p>Holds information about a value that is being written into a table&rsquo;s column from a SQL UPDATE statement.</p>"},"Structs/ADSQLTableConstraint.html":{"name":"ADSQLTableConstraint","abstract":"<p>Holds information about a constraint being applied to table from a CREATE TABLE SQL instruction.</p>"},"Protocols/ADSQLExpression.html#/s:12SwiftletData15ADSQLExpressionP12fromInstancexAA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLExpression"},"Protocols/ADSQLExpression.html#/s:12SwiftletData15ADSQLExpressionP8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLExpression"},"Protocols/ADSQLExpression.html#/s:12SwiftletData15ADSQLExpressionP6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLExpression"},"Protocols/ADSQLExpression.html#/s:12SwiftletData15ADSQLExpressionP6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLExpression"},"Protocols/ADDataTable.html#/s:12SwiftletData11ADDataTableP9tableNameSSvpZ":{"name":"tableName","abstract":"<p>Gets the name of the table that the data is stored in.</p>","parent_name":"ADDataTable"},"Protocols/ADDataTable.html#/s:12SwiftletData11ADDataTableP10primaryKeySSvpZ":{"name":"primaryKey","abstract":"<p>Returns the key for the table property that acts as the record&rsquo;s primary key. Typically this defaults to a field called <code>id</code>.</p>","parent_name":"ADDataTable"},"Protocols/ADDataTable.html#/s:12SwiftletData11ADDataTableP14primaryKeyTypeAA0cdfG0OvpZ":{"name":"primaryKeyType","abstract":"<p>Returns the type of primary key. Typically, the default type is <code>uniqueValue</code>.</p>","parent_name":"ADDataTable"},"Protocols/ADDataTable.html#/s:12SwiftletData11ADDataTablePxycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the <code>ADDataTable</code>.</p>","parent_name":"ADDataTable"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6isOpenSbvp":{"name":"isOpen","abstract":"<p>Is there currently a data source open for the provider.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP10isReadOnlySbvp":{"name":"isReadOnly","abstract":"<p>Can the data provider write to the given data source.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP11knownTablesSaySSGvp":{"name":"knownTables","abstract":"<p>An array of all tables that have been read from or written to the given data source.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP10openSource_10fromBundle8readOnlyySS_S2btKF":{"name":"openSource(_:fromBundle:readOnly:)","abstract":"<p>Opens the given source file for the data provider.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP12createSourceyySSKF":{"name":"createSource(_:)","abstract":"<p>Creates the given source file for the data provider.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP10saveSourceyySSKF":{"name":"saveSource(_:)","abstract":"<p>Saves an in-memory database to the given filename or copies a disk-based database (such as SQLite) to the new filename.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP7persistyyKF":{"name":"persist()","abstract":"<p>For in-memory data sources, writes the contents of the in-memory source to persistant storage.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP11closeSourceyyKF":{"name":"closeSource()","abstract":"<p>Closes any open data source attached to the data provider.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP12deleteSourceyySSKF":{"name":"deleteSource(_:)","abstract":"<p>For writable data sources, delete the data source with the specified file name.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP7execute_14withParametersSiSS_SayypGSgtKF":{"name":"execute(_:withParameters:)","abstract":"<p>Execute SQL (non-query) command with (optional) parameters and return result code.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP5query_14withParametersSaySDySSypGGSS_SayypGSgtKF":{"name":"query(_:withParameters:)","abstract":"<p>Run an SQL query with (parameters) parameters and returns an array of dictionaries where the keys are the column names.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP11tableExistsySbSSKF":{"name":"tableExists(_:)","abstract":"<p>Checks to see if the given table exists in the SQLite database.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP9countRows7inTable10filteredBy14withParametersSiSS_SSSayypGSgtKF":{"name":"countRows(inTable:filteredBy:withParameters:)","abstract":"<p>Counts the number of records in a given table, optionally filtered by a given set of contraints where a &ldquo;table&rdquo; represents the base unit of data (for example a SQLite table or JSON node) for the source of the data provider. </p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP9lastIntID8forTable7withKeySiSS_SStKF":{"name":"lastIntID(forTable:withKey:)","abstract":"<p>Gets the largest used number for the given integer primary key of the given table.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP10lastAutoID8forTableSiSS_tKF":{"name":"lastAutoID(forTable:)","abstract":"<p>Gets the last auto generated integer ID for the given table.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP19registerTableSchema_17withDefaultValuesyqd__m_qd__tKAA0cF0Rd__lF":{"name":"registerTableSchema(_:withDefaultValues:)","abstract":"<p>Registers the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class schema with the data provider and creates a table for the class if it doesn&rsquo;t already exist.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP17updateTableSchema_17withDefaultValuesyqd__m_qd__tKAA0cF0Rd__lF":{"name":"updateTableSchema(_:withDefaultValues:)","abstract":"<p>Attempts to modify the data source table schema to match the schema of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class if the schema has changed. If the table does not exist, it will attempt to be registered with the data source. If any new columns have been added, the default values will be set from the given defaults.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6hasRow7forType18matchingPrimaryKeySbqd__m_yptKAA0C5TableRd__lF":{"name":"hasRow(forType:matchingPrimaryKey:)","abstract":"<p>Checks to see if a row matching the given primary key exists in the underlying SQLite table.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP8rowCount7forType8filterBy14withParametersSiqd__m_SSSayypGSgtKAA0C5TableRd__lF":{"name":"rowCount(forType:filterBy:withParameters:)","abstract":"<p>Return the count of rows in the table, or the count of rows matching a specific filter criteria, if one was provided.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP4makeyqd__qd__mKAA0C5TableRd__lF":{"name":"make(_:)","abstract":"<p>Creates an instance of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class automatically setting the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong>.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6makeIDyypSgqd__mAA0C5TableRd__lF":{"name":"makeID(_:)","abstract":"<p>Returns a value for the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong> for a class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP14getTableSchema03forF4NameAA07ADTableG0CSS_tKF":{"name":"getTableSchema(forTableName:)","abstract":"<p>Returns all information about a given table in the data source including all of the columns and their types.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP4saveyypqd__KAA0C5TableRd__lF":{"name":"save(_:)","abstract":"<p>Saves the given class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the data source. If the data source does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value, a new record will be created, else the existing record will be updated.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP4saveyySayqd__GKAA0C5TableRd__lF":{"name":"save(_:)","abstract":"<p>Saves the given array of class instances conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the data source. If the data source does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value, a new record will be created, else the existing record will be updated.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP7getRows6ofType10fliteredBy07orderedJ010startingAt9limitedTo14withParametersSayqd__Gqd__m_S2SS2iSayypGSgtKAA0C5TableRd__lF":{"name":"getRows(ofType:fliteredBy:orderedBy:startingAt:limitedTo:withParameters:)","abstract":"<p>Returns rows from the data source of the given class type optionally filtered, sorted and limited to a specific range of results.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP7getRows6ofType11matchingSQL14withParametersSayqd__Gqd__m_SSSayypGSgtKAA0C5TableRd__lF":{"name":"getRows(ofType:matchingSQL:withParameters:)","abstract":"<p>Returns rows from the data source of the given class type matching the given SQL statement.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6getRow6ofType18forPrimaryKeyValueqd__Sgqd__m_yptKAA0C5TableRd__lF":{"name":"getRow(ofType:forPrimaryKeyValue:)","abstract":"<p>Returns a row from the SQLite database of the given class type matching the given primary key value.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6getRow6ofType7atIndex10fliteredBy07orderedL014withParametersqd__Sgqd__m_SiS2SSayypGSgtKAA0C5TableRd__lF":{"name":"getRow(ofType:atIndex:fliteredBy:orderedBy:withParameters:)","abstract":"<p>Returns a row from the data source of the given class type optionally filtered and limited to a specific range of results.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6deleteyyqd__KAA0C5TableRd__lF":{"name":"delete(_:)","abstract":"<p>Deletes the row matching the given record from the SQLite database.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP6deleteyySayqd__GKAA0C5TableRd__lF":{"name":"delete(_:)","abstract":"<p>Deletes the given set of records from the data source.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP9dropTableyyqd__mKAA0cF0Rd__lF":{"name":"dropTable(_:)","abstract":"<p>Drops the underlying table from the data source, completely removing all stored data in the table as well as the table itself.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP16beginTransactionyyKF":{"name":"beginTransaction()","abstract":"<p>Starts an explicit transaction to process a batch of data source changes. Once started, the transaction will remain open until it is either committed (via <code>endTransaction</code>) or rolled-back (via `rollbackTransaction).</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP14endTransactionyyKF":{"name":"endTransaction()","abstract":"<p>Attempts to commit any chages to the data source and close the current transaction that was opened using <code>beginTransaction</code>.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataProvider.html#/s:12SwiftletData14ADDataProviderP19rollbackTransactionyyKF":{"name":"rollbackTransaction()","abstract":"<p>Ends the current transaction (opened using <code>beginTransaction</code>) and undoes any changes made to the data source since the transaction was opened.</p>","parent_name":"ADDataProvider"},"Protocols/ADDataCrossReference.html#/s:12SwiftletData20ADDataCrossReferenceP05crossE4NameSSvp":{"name":"crossReferenceName","abstract":"<p>The name of the cross reference table.</p>","parent_name":"ADDataCrossReference"},"Protocols/ADDataCrossReference.html#/s:12SwiftletData20ADDataCrossReferenceP11leftKeyNameSSvp":{"name":"leftKeyName","abstract":"<p>The name of the left-side key used to store the primary key of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> on the left side of the relationship.</p>","parent_name":"ADDataCrossReference"},"Protocols/ADDataCrossReference.html#/s:12SwiftletData20ADDataCrossReferenceP12rightKeyNameSSvp":{"name":"rightKeyName","abstract":"<p>The name of the right-side key used to store the primary key of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> on the right side of the relationship.</p>","parent_name":"ADDataCrossReference"},"Protocols/ADDataCrossReference.html#/s:12SwiftletData20ADDataCrossReferenceP6delete4from11forKeyValueyAA0C8Provider_p_yptKF":{"name":"delete(from:forKeyValue:)","abstract":"<p>Removes all cross references for the given key value from the given data provider.</p>","parent_name":"ADDataCrossReference"},"Protocols/ADDataCrossReference.html#/s:12SwiftletData20ADDataCrossReferenceP4save2to11forKeyValueyAA0C8Provider_p_yptKF":{"name":"save(to:forKeyValue:)","abstract":"<p>Saves the given cross references to the data provider for the give key value. The cross reference table will automatically be created if it doesn&rsquo;t already exist.</p>","parent_name":"ADDataCrossReference"},"Protocols/ADDataCrossReference.html#/s:12SwiftletData20ADDataCrossReferenceP4load4from11forKeyValueyAA0C8Provider_p_yptKF":{"name":"load(from:forKeyValue:)","abstract":"<p>Loads all cross referenced <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> instances for the given cross reference based on the given key value.</p>","parent_name":"ADDataCrossReference"},"Protocols/ADDataCrossReference.html":{"name":"ADDataCrossReference","abstract":"<p>A class or struct conforming to this protocol can be used to store a one-to-many or many-to-many relationship between <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> records stored in or read from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataProvider.html\">ADDataProvider</a></code> instance.</p>"},"Protocols/ADDataProvider.html":{"name":"ADDataProvider","abstract":"<p>Defines an Action Data Provider that can be used to read and write data from a given data source.</p>"},"Protocols/ADDataTable.html":{"name":"ADDataTable","abstract":"<p>A class conforming to this protocol defines a unique container that holds the data that can be read from or written to a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataProvider.html\">ADDataProvider</a></code> source. For example, a <code>ADDataTable</code> can be used represent a SQLite database table, a JSON node or a XML node.</p>"},"Protocols/ADSQLExpression.html":{"name":"ADSQLExpression","abstract":"<p>Holds information about a expression parsed from a SQL instruction.</p>"},"Protocols.html#/s:12SwiftletData16ADSQLInstructionP":{"name":"ADSQLInstruction","abstract":"<p>Holds information about an instruction parsed from a SQL statement.</p>"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO14unknownKeywordyACSS_tcACmF":{"name":"unknownKeyword(message:)","abstract":"<p>The parser encountered an unknown keyword in the SQL Command. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO19unknownFunctionNameyACSS_tcACmF":{"name":"unknownFunctionName(message:)","abstract":"<p>The parser encountered an unknown function name in the SQL Command. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO14invalidKeywordyACSS_tcACmF":{"name":"invalidKeyword(message:)","abstract":"<p>The parser encountered an invalid keyword in the SQL Command. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO22mismatchedSingleQuotesyACSS_tcACmF":{"name":"mismatchedSingleQuotes(message:)","abstract":"<p>The parser encountered a value in single quotes that is not properly terminated. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO22mismatchedDoubleQuotesyACSS_tcACmF":{"name":"mismatchedDoubleQuotes(message:)","abstract":"<p>The parser encountered a value in double quotes that is not properly terminated. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO21mismatchedParenthesisyACSS_tcACmF":{"name":"mismatchedParenthesis(message:)","abstract":"<p>The parser encountered a value in parenthesis that is not properly terminated. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO19malformedSQLCommandyACSS_tcACmF":{"name":"malformedSQLCommand(message:)","abstract":"<p>The parser encountered a value that it was not expecting. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLParseError.html#/s:12SwiftletData15ADSQLParseErrorO16expectedIntValueyACSS_tcACmF":{"name":"expectedIntValue(message:)","abstract":"<p>The parser expected an integer as the next value. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLParseError"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8abortKeyyA2CmF":{"name":"abortKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9actionKeyyA2CmF":{"name":"actionKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6addKeyyA2CmF":{"name":"addKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8afterKeyyA2CmF":{"name":"afterKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6allKeyyA2CmF":{"name":"allKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8alterKeyyA2CmF":{"name":"alterKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10analyzeKeyyA2CmF":{"name":"analyzeKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6andKeyyA2CmF":{"name":"andKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5asKeyyA2CmF":{"name":"asKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6ascKeyyA2CmF":{"name":"ascKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9attachKeyyA2CmF":{"name":"attachKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO16autoIncrementKeyyA2CmF":{"name":"autoIncrementKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9beforeKeyyA2CmF":{"name":"beforeKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8beginKeyyA2CmF":{"name":"beginKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10betweenKeyyA2CmF":{"name":"betweenKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5byKeyyA2CmF":{"name":"byKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10cascadeKeyyA2CmF":{"name":"cascadeKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7caseKeyyA2CmF":{"name":"caseKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7castKeyyA2CmF":{"name":"castKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8checkKeyyA2CmF":{"name":"checkKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10collateKeyyA2CmF":{"name":"collateKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9columnKeyyA2CmF":{"name":"columnKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9commitKeyyA2CmF":{"name":"commitKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11conflictKeyyA2CmF":{"name":"conflictKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO13constraintKeyyA2CmF":{"name":"constraintKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9createKeyyA2CmF":{"name":"createKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8crossKeyyA2CmF":{"name":"crossKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO14currentDateKeyyA2CmF":{"name":"currentDateKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO14currentTimeKeyyA2CmF":{"name":"currentTimeKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO19currentTimestampKeyyA2CmF":{"name":"currentTimestampKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11databaseKeyyA2CmF":{"name":"databaseKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10defaultKeyyA2CmF":{"name":"defaultKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO13deferrableKeyyA2CmF":{"name":"deferrableKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11deferredKeyyA2CmF":{"name":"deferredKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9deleteKeyyA2CmF":{"name":"deleteKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7descKeyyA2CmF":{"name":"descKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9detachKeyyA2CmF":{"name":"detachKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11distinctKeyyA2CmF":{"name":"distinctKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7dropKeyyA2CmF":{"name":"dropKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7eachKeyyA2CmF":{"name":"eachKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7elseKeyyA2CmF":{"name":"elseKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6endKeyyA2CmF":{"name":"endKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9escapeKeyyA2CmF":{"name":"escapeKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9exceptKeyyA2CmF":{"name":"exceptKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12exclusiveKeyyA2CmF":{"name":"exclusiveKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9existsKeyyA2CmF":{"name":"existsKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10explainKeyyA2CmF":{"name":"explainKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7failKeyyA2CmF":{"name":"failKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6forKeyyA2CmF":{"name":"forKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10foreignKeyyA2CmF":{"name":"foreignKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7fromKeyyA2CmF":{"name":"fromKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7fullKeyyA2CmF":{"name":"fullKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7globKeyyA2CmF":{"name":"globKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8groupKeyyA2CmF":{"name":"groupKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9havingKeyyA2CmF":{"name":"havingKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5ifKeyyA2CmF":{"name":"ifKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9ignoreKeyyA2CmF":{"name":"ignoreKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12immediateKeyyA2CmF":{"name":"immediateKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5inKeyyA2CmF":{"name":"inKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8indexKeyyA2CmF":{"name":"indexKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10indexedKeyyA2CmF":{"name":"indexedKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12initiallyKeyyA2CmF":{"name":"initiallyKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8innerKeyyA2CmF":{"name":"innerKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9insertKeyyA2CmF":{"name":"insertKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10insteadKeyyA2CmF":{"name":"insteadKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12intersectKeyyA2CmF":{"name":"intersectKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7intoKeyyA2CmF":{"name":"intoKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5isKeyyA2CmF":{"name":"isKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9isNullKeyyA2CmF":{"name":"isNullKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7joinKeyyA2CmF":{"name":"joinKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6keyKeyyA2CmF":{"name":"keyKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7leftKeyyA2CmF":{"name":"leftKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7likeKeyyA2CmF":{"name":"likeKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8limitKeyyA2CmF":{"name":"limitKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8matchKeyyA2CmF":{"name":"matchKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10naturalKeyyA2CmF":{"name":"naturalKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5noKeyyA2CmF":{"name":"noKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6notKeyyA2CmF":{"name":"notKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10notNullKeyyA2CmF":{"name":"notNullKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7nullKeyyA2CmF":{"name":"nullKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5ofKeyyA2CmF":{"name":"ofKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9offsetKeyyA2CmF":{"name":"offsetKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5onKeyyA2CmF":{"name":"onKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5orKeyyA2CmF":{"name":"orKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8orderKeyyA2CmF":{"name":"orderKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8outerKeyyA2CmF":{"name":"outerKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7planKeyyA2CmF":{"name":"planKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9pragmaKeyyA2CmF":{"name":"pragmaKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10primaryKeyyA2CmF":{"name":"primaryKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8queryKeyyA2CmF":{"name":"queryKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8raiseKeyyA2CmF":{"name":"raiseKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12recursiveKeyyA2CmF":{"name":"recursiveKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO13referencesKeyyA2CmF":{"name":"referencesKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9regexpKeyyA2CmF":{"name":"regexpKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10reindexKeyyA2CmF":{"name":"reindexKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10releaseKeyyA2CmF":{"name":"releaseKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9renameKeyyA2CmF":{"name":"renameKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10replaceKeyyA2CmF":{"name":"replaceKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11restrictKeyyA2CmF":{"name":"restrictKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8rightKeyyA2CmF":{"name":"rightKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11rollbackKeyyA2CmF":{"name":"rollbackKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6rowKeyyA2CmF":{"name":"rowKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8rowIDKeyyA2CmF":{"name":"rowIDKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12savePointKeyyA2CmF":{"name":"savePointKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9selectKeyyA2CmF":{"name":"selectKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO6setKeyyA2CmF":{"name":"setKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8tableKeyyA2CmF":{"name":"tableKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7tempKeyyA2CmF":{"name":"tempKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12temporaryKeyyA2CmF":{"name":"temporaryKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7thenKeyyA2CmF":{"name":"thenKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5toKeyyA2CmF":{"name":"toKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO14transactionKeyyA2CmF":{"name":"transactionKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10triggerKeyyA2CmF":{"name":"triggerKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8unionKeyyA2CmF":{"name":"unionKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9uniqueKeyyA2CmF":{"name":"uniqueKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9updateKeyyA2CmF":{"name":"updateKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8usingKeyyA2CmF":{"name":"usingKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9vacuumKeyyA2CmF":{"name":"vacuumKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9valuesKeyyA2CmF":{"name":"valuesKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7viewKeyyA2CmF":{"name":"viewKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10virtualKeyyA2CmF":{"name":"virtualKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7whenKeyyA2CmF":{"name":"whenKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8whereKeyyA2CmF":{"name":"whereKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO7withKeyyA2CmF":{"name":"withKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO10withoutKeyyA2CmF":{"name":"withoutKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO14emptyStringKeyyA2CmF":{"name":"emptyStringKey","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO9semicolonyA2CmF":{"name":"semicolon","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO15openParenthesisyA2CmF":{"name":"openParenthesis","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO17closedParenthesisyA2CmF":{"name":"closedParenthesis","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5commayA2CmF":{"name":"comma","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5equalyA2CmF":{"name":"equal","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8notEqualyA2CmF":{"name":"notEqual","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8lessThanyA2CmF":{"name":"lessThan","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO11greaterThanyA2CmF":{"name":"greaterThan","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO17lessThanOrEqualToyA2CmF":{"name":"lessThanOrEqualTo","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO20greaterThanOrEqualToyA2CmF":{"name":"greaterThanOrEqualTo","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO4plusyA2CmF":{"name":"plus","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO5minusyA2CmF":{"name":"minus","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO8asteriskyA2CmF":{"name":"asterisk","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLKeyword.html#/s:12SwiftletData12ADSQLKeywordO12forwardSlashyA2CmF":{"name":"forwardSlash","abstract":"<p>Undocumented</p>","parent_name":"ADSQLKeyword"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5ltrimyA2CmF":{"name":"ltrim","abstract":"<p>Trims any white spaces off of the left side of a string.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO4trimyA2CmF":{"name":"trim","abstract":"<p>Trims any white spaces off both sides of a string.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5instryA2CmF":{"name":"instr","abstract":"<p>Tests to see if one string contains another.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO7replaceyA2CmF":{"name":"replace","abstract":"<p>Replaces all instances of one string inside another.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5upperyA2CmF":{"name":"upper","abstract":"<p>Converts the string to upper case.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO6lengthyA2CmF":{"name":"length","abstract":"<p>Returns the length of the string in characters.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5rtrimyA2CmF":{"name":"rtrim","abstract":"<p>Trims any white spaces off of the right side of the string.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5loweryA2CmF":{"name":"lower","abstract":"<p>Converts the string to lower case.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO6substryA2CmF":{"name":"substr","abstract":"<p>Returns the requested portion of the string.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3absyA2CmF":{"name":"abs","abstract":"<p>Returns the absolute value of a number.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3maxyA2CmF":{"name":"max","abstract":"<p>Returns the maximum value of a group of numbers.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5roundyA2CmF":{"name":"round","abstract":"<p>Rounds the given number.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3avgyA2CmF":{"name":"avg","abstract":"<p>Returns the average of a group of numbers.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3minyA2CmF":{"name":"min","abstract":"<p>Returns the minimum value of a group of numbers.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3sumyA2CmF":{"name":"sum","abstract":"<p>Returns the sum of a group of numbers.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5countyA2CmF":{"name":"count","abstract":"<p>Returns the number of records in a group.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO6randomyA2CmF":{"name":"random","abstract":"<p>Returns a random number</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO4dateyA2CmF":{"name":"date","abstract":"<p>Returns the date in this format: YYYY-MM-DD.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO9juliandayyA2CmF":{"name":"julianday","abstract":"<p>Returns the current date in Julian notation.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO8strftimeyA2CmF":{"name":"strftime","abstract":"<p>Formats the date as a string based on a set of formatting instructions.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO8datetimeyA2CmF":{"name":"datetime","abstract":"<p>Returns the current date and time in the YYYY-MM-DD HH:MM:SS format.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3nowyA2CmF":{"name":"now","abstract":"<p>Returns the current date and time.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO4timeyA2CmF":{"name":"time","abstract":"<p>Returns the time as HH:MM:SS</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO8coalesceyA2CmF":{"name":"coalesce","abstract":"<p>Accepts two or more arguments and returns the first non-null argument</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO17lastInsertedRowIDyA2CmF":{"name":"lastInsertedRowID","abstract":"<p>Returns the ID of the last row inserted into any table.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO6ifNullyA2CmF":{"name":"ifNull","abstract":"<p>Accepts two or more arguments and returns the first non-null argument.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO6nullIfyA2CmF":{"name":"nullIf","abstract":"<p>Returns <code>NULL</code> if any of the passed values are null.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO5checkyA2CmF":{"name":"check","abstract":"<p>Handles an internal check operation.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO7compareyA2CmF":{"name":"compare","abstract":"<p>Performs a comparison and returns one value if the comparison is <code>true</code> and another if it is <code>false</code>.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLFunction.html#/s:12SwiftletData13ADSQLFunctionO3get10fromStringACSgSS_tFZ":{"name":"get(fromString:)","abstract":"<p>Attempts to return a function type for the given string value.</p>","parent_name":"ADSQLFunction"},"Enums/ADSQLConflictHandling.html#/s:12SwiftletData21ADSQLConflictHandlingO4noneyA2CmF":{"name":"none","abstract":"<p>No conflict handling.</p>","parent_name":"ADSQLConflictHandling"},"Enums/ADSQLConflictHandling.html#/s:12SwiftletData21ADSQLConflictHandlingO8rollbackyA2CmF":{"name":"rollback","abstract":"<p>Rollback the changes.</p>","parent_name":"ADSQLConflictHandling"},"Enums/ADSQLConflictHandling.html#/s:12SwiftletData21ADSQLConflictHandlingO5abortyA2CmF":{"name":"abort","abstract":"<p>Abort SQL statement execution.</p>","parent_name":"ADSQLConflictHandling"},"Enums/ADSQLConflictHandling.html#/s:12SwiftletData21ADSQLConflictHandlingO4failyA2CmF":{"name":"fail","abstract":"<p>Fail the execution.</p>","parent_name":"ADSQLConflictHandling"},"Enums/ADSQLConflictHandling.html#/s:12SwiftletData21ADSQLConflictHandlingO6ignoreyA2CmF":{"name":"ignore","abstract":"<p>Ignore the issue.</p>","parent_name":"ADSQLConflictHandling"},"Enums/ADSQLConflictHandling.html#/s:12SwiftletData21ADSQLConflictHandlingO7replaceyA2CmF":{"name":"replace","abstract":"<p>Replace the value.</p>","parent_name":"ADSQLConflictHandling"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO04nullD0yA2CmF":{"name":"nullType","abstract":"<p>Database <code>NULL</code> is the same as a Swift <code>nil</code>.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO07integerD0yA2CmF":{"name":"integerType","abstract":"<p>Holds any type of Swift integer data types (<code>Int</code>, <code>UInt</code>, <code>Int32</code>, etc.)</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO05floatD0yA2CmF":{"name":"floatType","abstract":"<p>Holds any Swift <code>Double</code> or <code>Float</code> value.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO04textD0yA2CmF":{"name":"textType","abstract":"<p>Holds any Swift <code>String</code> value.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO05colorD0yA2CmF":{"name":"colorType","abstract":"<p>Holds a color definition as a text string in the form <code>#RRGGBBAA</code>.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO04blobD0yA2CmF":{"name":"blobType","abstract":"<p>Holds any Swift <code>Data</code> value. To store images, use the Action Utilities <code>toData()</code> method.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO04noneD0yA2CmF":{"name":"noneType","abstract":"<p>The database has an undefined type and can hold any type of Swift data.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO04dateD0yA2CmF":{"name":"dateType","abstract":"<p>Holds a Swift <code>Date</code> value.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO04boolD0yA2CmF":{"name":"boolType","abstract":"<p>Holds a Swift <code>Bool</code> value.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO3get10fromStringACSgSS_tFZ":{"name":"get(fromString:)","abstract":"<p>Attempts to get the type from a string.</p>","parent_name":"ADSQLColumnType"},"Enums/ADSQLColumnType.html#/s:12SwiftletData15ADSQLColumnTypeO3set10fromStringySS_tF":{"name":"set(fromString:)","abstract":"<p>Sets the column type from a string value.</p>","parent_name":"ADSQLColumnType"},"Enums/ADiCloudDatabaseType.html#/s:12SwiftletData20ADiCloudDatabaseTypeO07privateE0yA2CmF":{"name":"privateDatabase","abstract":"<p>The database containing the user’s private data.</p>","parent_name":"ADiCloudDatabaseType"},"Enums/ADiCloudDatabaseType.html#/s:12SwiftletData20ADiCloudDatabaseTypeO06publicE0yA2CmF":{"name":"publicDatabase","abstract":"<p>The database containing the data shared by all users.</p>","parent_name":"ADiCloudDatabaseType"},"Enums/ADiCloudDatabaseType.html#/s:12SwiftletData20ADiCloudDatabaseTypeO06sharedE0yA2CmF":{"name":"sharedDatabase","abstract":"<p>The database containing shared user data.</p>","parent_name":"ADiCloudDatabaseType"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO14duplicateTableyACSS_tcACmF":{"name":"duplicateTable(message:)","abstract":"<p>The table already exists inside of the data store. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO18unsupportedCommandyACSS_tcACmF":{"name":"unsupportedCommand(message:)","abstract":"<p>The requested SQL command isn&rsquo;t supported by Action Data or then current Data Provider. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO14invalidCommandyACSS_tcACmF":{"name":"invalidCommand(message:)","abstract":"<p>The requested SQL command isn&rsquo;t valid in the given context. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO12unknownTableyACSS_tcACmF":{"name":"unknownTable(message:)","abstract":"<p>The data store doesn&rsquo;t contain the given table. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO13unknownColumnyACSS_tcACmF":{"name":"unknownColumn(message:)","abstract":"<p>The data store doesn&rsquo;t contain the given column in the given table. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO06syntaxD0yACSS_tcACmF":{"name":"syntaxError(message:)","abstract":"<p>The data store could not execute the SQL command because it contained a syntax error. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO13invalidRecordyACSS_tcACmF":{"name":"invalidRecord(message:)","abstract":"<p>The ADRecord is not valid for the given data table. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO15duplicateRecordyACSS_tcACmF":{"name":"duplicateRecord(message:)","abstract":"<p>A record with the same primary key already exists in the table. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO21failedCheckConstraintyACSS_tcACmF":{"name":"failedCheckConstraint(message:)","abstract":"<p>An attempt to insert or update a record failed due to a CHECK constraint. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO14noRowsReturnedyACSS_tcACmF":{"name":"noRowsReturned(message:)","abstract":"<p>The SELECT clause in a CREATE statement returned no rows. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADSQLExecutionError.html#/s:12SwiftletData19ADSQLExecutionErrorO24unevenNumberOfParametersyACSS_tcACmF":{"name":"unevenNumberOfParameters(message:)","abstract":"<p>The number of parameters (specified by a <code>?</code> in the SQL statement) did not match the number of parameters provided. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADSQLExecutionError"},"Enums/ADDataTableKeyType.html#/s:12SwiftletData18ADDataTableKeyTypeO11uniqueValueyA2CmF":{"name":"uniqueValue","abstract":"<p>Specifies that the given primary key must be unique and not already exist for any other key in the data provider&rsquo;s data source.</p>","parent_name":"ADDataTableKeyType"},"Enums/ADDataTableKeyType.html#/s:12SwiftletData18ADDataTableKeyTypeO19autoIncrementingIntyA2CmF":{"name":"autoIncrementingInt","abstract":"<p>For an <code>Int</code> type of primary key, automatically assign a key value when a new row is added to the data provider&rsquo;s data source.</p>","parent_name":"ADDataTableKeyType"},"Enums/ADDataTableKeyType.html#/s:12SwiftletData18ADDataTableKeyTypeO11computedIntyA2CmF":{"name":"computedInt","abstract":"<p>For an <code>Int</code> type of primary key, automatically assign a key value when a new row is added to the data provider&rsquo;s data source by finding the largest used ID number and adding one to it.</p>","parent_name":"ADDataTableKeyType"},"Enums/ADDataTableKeyType.html#/s:12SwiftletData18ADDataTableKeyTypeO14autoUUIDStringyA2CmF":{"name":"autoUUIDString","abstract":"<p>For a <code>String</code> type of primary key, automatically assign a UUID as the key value when a new class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol is created.</p>","parent_name":"ADDataTableKeyType"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO17dataSourceNotOpenyA2CmF":{"name":"dataSourceNotOpen","abstract":"<p>The data provider is attempting to work with a datasource before it has been opened.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO20dataSourceCopyFailedyACSS_tcACmF":{"name":"dataSourceCopyFailed(message:)","abstract":"<p>Failed to copy a writable version of the database source from the app&rsquo;s bundle to the documents directory. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO18dataSourceNotFoundyA2CmF":{"name":"dataSourceNotFound","abstract":"<p>Unable to open the data source from the given location  or with the given name.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO012unableToOpenB6SourceyA2CmF":{"name":"unableToOpenDataSource","abstract":"<p>The data provider was unable to open the given data source.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO20failedToDeleteSourceyA2CmF":{"name":"failedToDeleteSource","abstract":"<p>The data provider failed to delete the data source.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO13tableNotFoundyACSS_tcACmF":{"name":"tableNotFound(message:)","abstract":"<p>The data provider does not have the requested table name on file. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO18failedToPrepareSQLyACSS_tcACmF":{"name":"failedToPrepareSQL(message:)","abstract":"<p>The data provider was unable to prepare the SQL statement for execution while binding the passed set of parameters. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO22parameterCountMismatchyA2CmF":{"name":"parameterCountMismatch","abstract":"<p>The number of parameters specified in the SQL statement did not match the number of parameters passed to the data provider.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO21unableToBindParameteryACSS_tcACmF":{"name":"unableToBindParameter(message:)","abstract":"<p>The data provider was unable to bind a given parameter to the SQL statement. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO19failedToCreateTableyACSS_tcACmF":{"name":"failedToCreateTable(message:)","abstract":"<p>The data provider was unable to create the requested table in the data source. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO18failedToExecuteSQLyACSS_tcACmF":{"name":"failedToExecuteSQL(message:)","abstract":"<p>The data provider was unable to execute the given SQL statement. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO25failedToUpdateTableSchemayACSS_tcACmF":{"name":"failedToUpdateTableSchema(message:)","abstract":"<p>The data provider was unable to update the given table schema to the new version. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO15unableToGetRowsyACSS_tcACmF":{"name":"unableToGetRows(message:)","abstract":"<p>The data provider was unable to fetch the requested row(s) from the data source. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO17batchUpdateFailedyACSS_tcACmF":{"name":"batchUpdateFailed(message:)","abstract":"<p>The data provider was unable to complete the given batch update command. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO20missingRequiredValueyACSS_tcACmF":{"name":"missingRequiredValue(message:)","abstract":"<p>While attempting to create or update a table schema, the data provider encountered a <code>nil</code> value. Use either the <code>register</code> or <code>update</code> functions with a fully populated <strong>default value class instance</strong> (with all values set to a default, non-nil value) to create or update the table schema. <code>message</code> contains the details of the given failure.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO20unableToConvertValueyACSS_tcACmF":{"name":"unableToConvertValue(message:)","abstract":"<p>While reading a value from a CloudKit record, the data provider was unable to move that value forward.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html#/s:12SwiftletData19ADDataProviderErrorO15noRowsRemainingyA2CmF":{"name":"noRowsRemaining","abstract":"<p>No further rows are remaining from a call to <code>getRows</code>.</p>","parent_name":"ADDataProviderError"},"Enums/ADDataProviderError.html":{"name":"ADDataProviderError","abstract":"<p>Defines the type of errors that can arise when working with a data provider that conforms to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataProvider.html\">ADDataProvider</a></code> protocol.</p>"},"Enums/ADDataTableKeyType.html":{"name":"ADDataTableKeyType","abstract":"<p>Defines the type of primary key that has been specified for a class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol.</p>"},"Enums/ADSQLExecutionError.html":{"name":"ADSQLExecutionError","abstract":"<p>Defines the errors that can be thrown when executing SQL statements.</p>"},"Enums/ADiCloudDatabaseType.html":{"name":"ADiCloudDatabaseType","abstract":"<p>Holds the type of database that an instance of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADiCloudProvider.html\">ADiCloudProvider</a></code> will access.</p>"},"Enums/ADSQLColumnType.html":{"name":"ADSQLColumnType","abstract":"<p>Defines the type of a column stored in a SQL data source. Currently, these support the same data types as SQLite: <code>NULL</code>, <code>INTEGER</code>, <code>FLOAT</code>, <code>TEXT</code>, <code>BLOB</code>, <code>NONE</code>, <code>DATE</code> and <code>BOOLEAN</code>.</p>"},"Enums/ADSQLConflictHandling.html":{"name":"ADSQLConflictHandling","abstract":"<p>Defines the type of conflict handling that can be applied to a column or table constraint.</p>"},"Enums/ADSQLFunction.html":{"name":"ADSQLFunction","abstract":"<p>Defines the type of functions that can be called in a SQL expression.</p>"},"Enums/ADSQLKeyword.html":{"name":"ADSQLKeyword","abstract":"<p>Contains a list of all valid SQL keywords that the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLParser.html\">ADSQLParser</a></code> can understand.</p>"},"Enums/ADSQLParseError.html":{"name":"ADSQLParseError","abstract":"<p>Defines the type of errors that can arise when parsing a SQL command string.</p>"},"Global%20Variables.html#/s:12SwiftletData11SQLITE_DATEs5Int32Vvp":{"name":"SQLITE_DATE","abstract":"<p>Defines the type for a SQLite Date value.</p>"},"Classes/ADSQLJoinClause/JoinType.html#/s:12SwiftletData15ADSQLJoinClauseC8JoinTypeO4noneyA2EmF":{"name":"none","abstract":"<p>This join represents an individual table name.</p>","parent_name":"JoinType"},"Classes/ADSQLJoinClause/JoinType.html#/s:12SwiftletData15ADSQLJoinClauseC8JoinTypeO7naturalyA2EmF":{"name":"natural","abstract":"<p>The table is joined to another table where on any fields that have the same name and value.</p>","parent_name":"JoinType"},"Classes/ADSQLJoinClause/JoinType.html#/s:12SwiftletData15ADSQLJoinClauseC8JoinTypeO9leftOuteryA2EmF":{"name":"leftOuter","abstract":"<p>This table is Left Outer Joined to another table.</p>","parent_name":"JoinType"},"Classes/ADSQLJoinClause/JoinType.html#/s:12SwiftletData15ADSQLJoinClauseC8JoinTypeO5inneryA2EmF":{"name":"inner","abstract":"<p>This table is Inner Joined to another table.</p>","parent_name":"JoinType"},"Classes/ADSQLJoinClause/JoinType.html#/s:12SwiftletData15ADSQLJoinClauseC8JoinTypeO5crossyA2EmF":{"name":"cross","abstract":"<p>This table is Cross Joined to another table.</p>","parent_name":"JoinType"},"Classes/ADSQLJoinClause/JoinType.html":{"name":"JoinType","abstract":"<p>The type of join being created.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC11parentTableSSvp":{"name":"parentTable","abstract":"<p>The name of the parent table in a join operation or a literal table name is no join is being performed and the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC4typeAC8JoinTypeOvp\">type</a></code> property&rsquo;s value is <code>none</code>.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC16parentTableAliasSSvp":{"name":"parentTableAlias","abstract":"<p>The optional alias for the parent table.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC10childTableSSvp":{"name":"childTable","abstract":"<p>The name of the child table in a join operation of empty string if no join is being performed.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC15childTableAliasSSvp":{"name":"childTableAlias","abstract":"<p>The alias for the child table.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC9childJoinACSgvp":{"name":"childJoin","abstract":"<p>If the child table is part of a join, this represents its join clause.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC4typeAC8JoinTypeOvp":{"name":"type","abstract":"<p>The type of join being performed.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC12onExpressionAA15ADSQLExpression_pSgvp":{"name":"onExpression","abstract":"<p>Defines the conditions that two tables are joined on or <code>nil</code> if no join is being performed.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLJoinClause.html#/s:12SwiftletData15ADSQLJoinClauseC10columnListSaySSGvp":{"name":"columnList","abstract":"<p>A list of columns that are part of the join.</p>","parent_name":"ADSQLJoinClause"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC9whenValueAA15ADSQLExpression_pvp":{"name":"whenValue","abstract":"<p>The value used to trigger the expression.</p>","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC9thenValueAA15ADSQLExpression_pvp":{"name":"thenValue","abstract":"<p>The value returned when triggered.</p>","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC9whenValue04thenF0AcA15ADSQLExpression_p_AaF_ptcfc":{"name":"init(whenValue:thenValue:)","abstract":"<p>Undocumented</p>","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLWhenExpression.html#/s:12SwiftletData19ADSQLWhenExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLWhenExpression"},"Classes/ADSQLUnaryExpression/UnaryOperation.html#/s:12SwiftletData20ADSQLUnaryExpressionC14UnaryOperationO8positiveyA2EmF":{"name":"positive","abstract":"<p>Force a value to be positive.</p>","parent_name":"UnaryOperation"},"Classes/ADSQLUnaryExpression/UnaryOperation.html#/s:12SwiftletData20ADSQLUnaryExpressionC14UnaryOperationO8negativeyA2EmF":{"name":"negative","abstract":"<p>Force a value to be negative.</p>","parent_name":"UnaryOperation"},"Classes/ADSQLUnaryExpression/UnaryOperation.html#/s:12SwiftletData20ADSQLUnaryExpressionC14UnaryOperationO3notyA2EmF":{"name":"not","abstract":"<p>Negate a boolean value.</p>","parent_name":"UnaryOperation"},"Classes/ADSQLUnaryExpression/UnaryOperation.html#/s:12SwiftletData20ADSQLUnaryExpressionC14UnaryOperationO5groupyA2EmF":{"name":"group","abstract":"<p>Group a value.</p>","parent_name":"UnaryOperation"},"Classes/ADSQLUnaryExpression/UnaryOperation.html":{"name":"UnaryOperation","abstract":"<p>Defines the type of unary expression.</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC9operationAC14UnaryOperationOvp":{"name":"operation","abstract":"<p>The type of unary operation to perform.</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC5valueAA15ADSQLExpression_pvp":{"name":"value","abstract":"<p>The value that is being operated on.</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC9operation5valueA2C14UnaryOperationO_AA15ADSQLExpression_ptcfc":{"name":"init(operation:value:)","abstract":"<p>Undocumented</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLUnaryExpression.html#/s:12SwiftletData20ADSQLUnaryExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLUnaryExpression"},"Classes/ADSQLLiteralExpression.html#/s:12SwiftletData22ADSQLLiteralExpressionC5valueSSvp":{"name":"value","abstract":"<p>Defines the value of the literal.</p>","parent_name":"ADSQLLiteralExpression"},"Classes/ADSQLLiteralExpression.html#/s:12SwiftletData22ADSQLLiteralExpressionC5valueACSS_tcfc":{"name":"init(value:)","abstract":"<p>Creates a new literal expression.</p>","parent_name":"ADSQLLiteralExpression"},"Classes/ADSQLLiteralExpression.html#/s:12SwiftletData22ADSQLLiteralExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLLiteralExpression"},"Classes/ADSQLLiteralExpression.html#/s:12SwiftletData22ADSQLLiteralExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLLiteralExpression"},"Classes/ADSQLLiteralExpression.html#/s:12SwiftletData22ADSQLLiteralExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLLiteralExpression"},"Classes/ADSQLLiteralExpression.html#/s:12SwiftletData22ADSQLLiteralExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLLiteralExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC5valueAA15ADSQLExpression_pvp":{"name":"value","abstract":"<p>The value to test.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC4listSayAA15ADSQLExpression_pGvp":{"name":"list","abstract":"<p>The list of possible values.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC6negateSbvp":{"name":"negate","abstract":"<p>If <code>true</code>, negate the results of the test, else <code>false</code>.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC5value6inList_AcA15ADSQLExpression_p_SayAaF_pGSbtcfc":{"name":"init(value:inList:_:)","abstract":"<p>Creates a new In Expression instance.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLInExpression"},"Classes/ADSQLInExpression.html#/s:12SwiftletData17ADSQLInExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLInExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC10accumulateSbvpZ":{"name":"accumulate","abstract":"<p>If <code>true</code> and the function is an aggregate function, the function is in the accumulation pass where it is accumulating values. If <code>false</code> the function will simply report the values acquired in the accumulation pass.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC12functionTypeAA0C0Ovp":{"name":"functionType","abstract":"<p>The type of function being performed.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC10parametersSayAA15ADSQLExpression_pGvp":{"name":"parameters","abstract":"<p>The list of optional parameters being passed to the function.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC11isAggregateSbvp":{"name":"isAggregate","abstract":"<p>Returns <code>true</code> if the function is one of the aggregate functions: COUNT, MIN, MAX, AVG, SUM.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC12functionType10parametersAcA0C0O_SayAA15ADSQLExpression_pGtcfc":{"name":"init(functionType:parameters:)","abstract":"<p>Creates a new Function Expression instance.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC20ensureParameterCount6equalsySi_tKF":{"name":"ensureParameterCount(equals:)","abstract":"<p>Ensures the proper number of parameters have been passed to a given function call.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC20ensureParameterCount7between3andySi_SitKF":{"name":"ensureParameterCount(between:and:)","abstract":"<p>Ensures the proper number of parameters have been passed to a given function call.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLFunctionExpression.html#/s:12SwiftletData23ADSQLFunctionExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLFunctionExpression"},"Classes/ADSQLForeignKeyExpression/ModifyAction.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12ModifyActionO7setNullyA2EmF":{"name":"setNull","abstract":"<p>Set the key to null.</p>","parent_name":"ModifyAction"},"Classes/ADSQLForeignKeyExpression/ModifyAction.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12ModifyActionO10setDefaultyA2EmF":{"name":"setDefault","abstract":"<p>Set the key to the default value.</p>","parent_name":"ModifyAction"},"Classes/ADSQLForeignKeyExpression/ModifyAction.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12ModifyActionO7cascadeyA2EmF":{"name":"cascade","abstract":"<p>Cascade changes to the foreign key&rsquo;s table.</p>","parent_name":"ModifyAction"},"Classes/ADSQLForeignKeyExpression/ModifyAction.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12ModifyActionO8restrictyA2EmF":{"name":"restrict","abstract":"<p>Restrict changes to the foreign key.</p>","parent_name":"ModifyAction"},"Classes/ADSQLForeignKeyExpression/ModifyAction.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12ModifyActionO02noG0yA2EmF":{"name":"noAction","abstract":"<p>Take no action.</p>","parent_name":"ModifyAction"},"Classes/ADSQLForeignKeyExpression/OnModify.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC8OnModifyO6ignoreyA2EmF":{"name":"ignore","abstract":"<p>Ignore the key if modified.</p>","parent_name":"OnModify"},"Classes/ADSQLForeignKeyExpression/OnModify.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC8OnModifyO6deleteyA2EmF":{"name":"delete","abstract":"<p>Delete the foreign value if deleting a row with the key.</p>","parent_name":"OnModify"},"Classes/ADSQLForeignKeyExpression/OnModify.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC8OnModifyO6updateyA2EmF":{"name":"update","abstract":"<p>Update the foreign value if update a row with the key.</p>","parent_name":"OnModify"},"Classes/ADSQLForeignKeyExpression/OnModify.html":{"name":"OnModify","abstract":"<p>Defines the modify action to take.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression/ModifyAction.html":{"name":"ModifyAction","abstract":"<p>Defines the action to take on the foreign key.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC16foreignTableNameSSvp":{"name":"foreignTableName","abstract":"<p>The name of the foreign key table.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC11columnNamesSaySSGvp":{"name":"columnNames","abstract":"<p>A list of columns that compose the key.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC8onModifyAC02OnG0Ovp":{"name":"onModify","abstract":"<p>The action to take when the foreign key is modified when the parent row is modified.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12modifyActionAC06ModifyG0Ovp":{"name":"modifyAction","abstract":"<p>The action to take when modifying a foreign key value.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC9matchNameSSvp":{"name":"matchName","abstract":"<p>The name of the field to match in the foreign key table.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC10deferrableSbvp":{"name":"deferrable","abstract":"<p>If <code>true</code>, the action is defferable, else <code>false</code>.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC18initiallyImmediateSbvp":{"name":"initiallyImmediate","abstract":"<p>If <code>true</code>, the action is immediate, else <code>false</code>.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionCACycfc":{"name":"init()","abstract":"<p>Creates a new Foreign Key Expression instance.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLForeignKeyExpression.html#/s:12SwiftletData25ADSQLForeignKeyExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLForeignKeyExpression"},"Classes/ADSQLExpressionBuilder.html#/s:12SwiftletData22ADSQLExpressionBuilderC5build12fromInstanceAA0C0_pSgAA20ADInstanceDictionaryC_tFZ":{"name":"build(fromInstance:)","abstract":"<p>Takes an Instance Dictionary representing an expression read from a Swift Portable Object Notation (SPON) data stream and attempts to return an Action Data Expression.</p>","parent_name":"ADSQLExpressionBuilder"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC12compareValueAA15ADSQLExpression_pvp":{"name":"compareValue","abstract":"<p>The value to compare.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC8toValuesSayAA09ADSQLWhenD0CGvp":{"name":"toValues","abstract":"<p>The list of value to compare against.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC12defaultValueAA15ADSQLExpression_pvp":{"name":"defaultValue","abstract":"<p>The default value to return when no values match.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC12compareValue8toValues07defaultF0AcA15ADSQLExpression_p_SayAA09ADSQLWhenD0CGAaG_ptcfc":{"name":"init(compareValue:toValues:defaultValue:)","abstract":"<p>Creates a new Case Expression instance.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLCaseExpression.html#/s:12SwiftletData19ADSQLCaseExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLCaseExpression"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO8additionyA2EmF":{"name":"addition","abstract":"<p>Adding two values.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO11subtractionyA2EmF":{"name":"subtraction","abstract":"<p>Subtracting one value from another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO14multiplicationyA2EmF":{"name":"multiplication","abstract":"<p>Multiplying two values.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO8divisionyA2EmF":{"name":"division","abstract":"<p>Dividing a value by another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO7equalToyA2EmF":{"name":"equalTo","abstract":"<p>Testing to see if two values are equal.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO10notEqualToyA2EmF":{"name":"notEqualTo","abstract":"<p>Testing to see if two values are not equal.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO8lessThanyA2EmF":{"name":"lessThan","abstract":"<p>Testing to see if one value is less than another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO11greaterThanyA2EmF":{"name":"greaterThan","abstract":"<p>Testing to see if one value is greater than another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO17lessThanOrEqualToyA2EmF":{"name":"lessThanOrEqualTo","abstract":"<p>Testing to see if one value is less than or equal to another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO20greaterThanOrEqualToyA2EmF":{"name":"greaterThanOrEqualTo","abstract":"<p>Testing to see if one value is greater than or equal to another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO3andyA2EmF":{"name":"and","abstract":"<p>Testing to see if both values are <code>true</code>.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO2oryA2EmF":{"name":"or","abstract":"<p>Testing to see if either value is <code>true</code>.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO6castToyA2EmF":{"name":"castTo","abstract":"<p>Casting a value to another type.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO7collateyA2EmF":{"name":"collate","abstract":"<p>Perform a collations on both values.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO4likeyA2EmF":{"name":"like","abstract":"<p>See if one value is like another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO4globyA2EmF":{"name":"glob","abstract":"<p>See if one value is like another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO6regexpyA2EmF":{"name":"regexp","abstract":"<p>Perform a RegEx operation on a value.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html#/s:12SwiftletData21ADSQLBinaryExpressionC15BinaryOperationO5matchyA2EmF":{"name":"match","abstract":"<p>See if one value matches another.</p>","parent_name":"BinaryOperation"},"Classes/ADSQLBinaryExpression/BinaryOperation.html":{"name":"BinaryOperation","abstract":"<p>Defines the type of binary operation being performed.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC9leftValueAA15ADSQLExpression_pvp":{"name":"leftValue","abstract":"<p>The left side of the binary expression.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC9operationAC15BinaryOperationOvp":{"name":"operation","abstract":"<p>The operation to perform on both values.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC10rightValueAA15ADSQLExpression_pSgvp":{"name":"rightValue","abstract":"<p>The right side of the binary expression.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC6negateSbvp":{"name":"negate","abstract":"<p>If <code>true</code>, negate a binary value result, else <code>false</code>.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC9leftValue9operation05rightF0_AcA15ADSQLExpression_p_AC15BinaryOperationOAaG_pSgSbtcfc":{"name":"init(leftValue:operation:rightValue:_:)","abstract":"<p>Initializes a new Binary Expression.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBinaryExpression.html#/s:12SwiftletData21ADSQLBinaryExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLBinaryExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC5valueAA15ADSQLExpression_pvp":{"name":"value","abstract":"<p>The value to test.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC8lowValueAA15ADSQLExpression_pvp":{"name":"lowValue","abstract":"<p>The low range to test against.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC9highValueAA15ADSQLExpression_pvp":{"name":"highValue","abstract":"<p>The high range to test against.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC6negateSbvp":{"name":"negate","abstract":"<p>If <code>true</code>, negate the results of the test, else <code>false</code>.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC7valueIn8lowValue04highH0_AcA15ADSQLExpression_p_AaG_pAaG_pSbtcfc":{"name":"init(valueIn:lowValue:highValue:_:)","abstract":"<p>Creates a new instance of the Between Expression.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC8evaluate9forRecordypSgSDySSypGSg_tKF":{"name":"evaluate(forRecord:)","abstract":"<p>Evaluates the given expression and returns a result based on the data in the record passed in.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the expression into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLBetweenExpression.html#/s:12SwiftletData22ADSQLBetweenExpressionC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the expression from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADSQLBetweenExpression"},"Classes/ADSQLParser.html#/s:12SwiftletData11ADSQLParserC5parseySayAA16ADSQLInstruction_pGSSKFZ":{"name":"parse(_:)","abstract":"<p>Attempts to parse the given string into an Action Data SQL DOM. This parser currently supports a subset of SQL commands as defined by SQLite. For exmaple:</p>","parent_name":"ADSQLParser"},"Classes/ADSQLParser.html#/s:12SwiftletData11ADSQLParserC21parseResultColumnListSayAA011ADSQLResultF0VGyKFZ":{"name":"parseResultColumnList()","abstract":"<p>Parses a list of result columns from a SELECT clause in a SQL instruction.</p>","parent_name":"ADSQLParser"},"Classes/ADUtilities/Operation.html#/s:12SwiftletData11ADUtilitiesC9OperationO4plusyA2EmF":{"name":"plus","abstract":"<p>Adding two values.</p>","parent_name":"Operation"},"Classes/ADUtilities/Operation.html#/s:12SwiftletData11ADUtilitiesC9OperationO5minusyA2EmF":{"name":"minus","abstract":"<p>Subtracting one value from another.</p>","parent_name":"Operation"},"Classes/ADUtilities/Operation.html#/s:12SwiftletData11ADUtilitiesC9OperationO5timesyA2EmF":{"name":"times","abstract":"<p>Multiplying two values.</p>","parent_name":"Operation"},"Classes/ADUtilities/Operation.html#/s:12SwiftletData11ADUtilitiesC9OperationO9dividedByyA2EmF":{"name":"dividedBy","abstract":"<p>Dividing a value by another.</p>","parent_name":"Operation"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO7equalToyA2EmF":{"name":"equalTo","abstract":"<p>Both values are equal.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO10notEqualToyA2EmF":{"name":"notEqualTo","abstract":"<p>The values are not equal.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO8lessThanyA2EmF":{"name":"lessThan","abstract":"<p>The first value is less than the second.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO11greaterThanyA2EmF":{"name":"greaterThan","abstract":"<p>The first value is greater than the second.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO17lessThanOrEqualToyA2EmF":{"name":"lessThanOrEqualTo","abstract":"<p>The first value is less than or equal to the second one.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO20greaterThanOrEqualToyA2EmF":{"name":"greaterThanOrEqualTo","abstract":"<p>The first value is greater than or equal to the second one.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO8containsyA2EmF":{"name":"contains","abstract":"<p>The second value is contained inside the first.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO3andyA2EmF":{"name":"and","abstract":"<p>Testing to see if both values are <code>true</code>.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html#/s:12SwiftletData11ADUtilitiesC10ComparisonO2oryA2EmF":{"name":"or","abstract":"<p>Testing to see if either value is <code>true</code>.</p>","parent_name":"Comparison"},"Classes/ADUtilities/Comparison.html":{"name":"Comparison","abstract":"<p>Defines a comparison between two values.</p>","parent_name":"ADUtilities"},"Classes/ADUtilities/Operation.html":{"name":"Operation","abstract":"<p>Defines a computation between values.</p>","parent_name":"ADUtilities"},"Classes/ADUtilities.html#/s:12SwiftletData11ADUtilitiesC7compareySbyp_AC10ComparisonOyptFZ":{"name":"compare(_:_:_:)","abstract":"<p>Compares two values of type <code>Any</code> to see if they are equal, not equal, less than, greater than, less than or equal to or greater than or equal to eachother. Both values must be of the same type and internally stored as a <strong>Int</strong>, <strong>Double</strong>, <strong>Float</strong>, <strong>String</strong> or <strong>Bool</strong>.</p>","parent_name":"ADUtilities"},"Classes/ADUtilities.html#/s:12SwiftletData11ADUtilitiesC7computeyypyp_AC9OperationOyptFZ":{"name":"compute(_:_:_:)","abstract":"<p>Calculates the addition, subtraction, multiplication or division of two values of type <code>Any</code>. Both values must be of the same type and internally stored as a <strong>Int</strong>, <strong>Double</strong>, <strong>Float</strong>, <strong>String</strong> or <strong>Bool</strong>. <strong>String</strong> and <strong>Bool</strong> types support addition only. Additionally, <strong>String</strong> can be added to any other type and the result is a <strong>String</strong> with the value appended to it.</p>","parent_name":"ADUtilities"},"Classes/ADUtilities.html#/s:12SwiftletData11ADUtilitiesC4cast_2toypyp_AA15ADSQLColumnTypeOtKFZ":{"name":"cast(_:to:)","abstract":"<p>Attempts to cast the given <code>Any</code> type value to the given SQL Database type.</p>","parent_name":"ADUtilities"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC6schemaAA0C6SchemaCSgvp":{"name":"schema","abstract":"<p>Holds the schema defining this table as the columns for each row, the column types and any constraints applied to those columns.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC19lastPrimaryKeyValueypSgvp":{"name":"lastPrimaryKeyValue","abstract":"<p>Returns the value of the primary key for the last record added to the table. If there are no records in the table or no primary key defined, <code>nil</code> is returned.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC22nextAutoIncrementingIDSivp":{"name":"nextAutoIncrementingID","abstract":"<p>Returns the next ID value for auto incrementing integer primary keys else returns zero (0).</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC4rowsSaySDySSypGGvp":{"name":"rows","abstract":"<p>For data sources that provide in-memory data storage (such as JSON, SPON and XML) this property holds all of the rows in the table as <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> objects.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC9tableNameACSS_tcfc":{"name":"init(tableName:)","abstract":"<p>Initializes a new table storage instance.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Initializes a new table storage instance.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC6hasRow19withPrimaryKeyValueSbyp_tF":{"name":"hasRow(withPrimaryKeyValue:)","abstract":"<p>Test to see if the table contains a row with the given primary key value.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC9insertRow_6actionySDySSypG_AA22ADSQLInsertInstructionV6ActionOtKF":{"name":"insertRow(_:action:)","abstract":"<p>Attempts to insert the given record in the table.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC14validateRecordyAA19ADSQLExecutionErrorOSgSDySSypGF":{"name":"validateRecord(_:)","abstract":"<p>Checks the given record to ensure it is valid in the context of the table.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC7findRow8matching9onColumnsSDySSypGSgAG_SaySSGtF":{"name":"findRow(matching:onColumns:)","abstract":"<p>Returns the first row matching the given record on the given list of columns.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC8findRows8matching9onColumnsSaySDySSypGGAG_SaySSGtF":{"name":"findRows(matching:onColumns:)","abstract":"<p>Returns all rows matching the given record on the given list of columns.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC7findRow8matching2on5aliasSDySSypGSgAH_AA15ADSQLExpression_pSStKF":{"name":"findRow(matching:on:alias:)","abstract":"<p>Returns the first row matching the values in the given record using the given expression.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC8findRows8matching2on5aliasSaySDySSypGGAH_AA15ADSQLExpression_pSStKF":{"name":"findRows(matching:on:alias:)","abstract":"<p>Returns the all rows matching the values in the given record using the given expression.</p>","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the table store into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADTableStore"},"Classes/ADTableStore.html#/s:12SwiftletData12ADTableStoreC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the table store from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADTableStore"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC4nameSSvp":{"name":"name","abstract":"<p>The table name.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC6columnSayAA08ADColumnD0CGvp":{"name":"column","abstract":"<p>The table&rsquo;s column information as an array of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADColumnSchema.html\">ADColumnSchema</a></code> instances.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC16primaryKeyColumnAA08ADColumnD0CSgvp":{"name":"primaryKeyColumn","abstract":"<p>Returns the column that has been defined as the primary key</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC10primaryKeySSvp":{"name":"primaryKey","abstract":"<p>Returns the primary key for the table or an empty string (&ldquo;&rdquo;) if no primary key has been defined.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC4nameACSS_tcfc":{"name":"init(name:)","abstract":"<p>Creates a new instance of the table schema.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Initializes a new <code>ADTableSchema</code> and sets its initial properties.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC3add5valueyAA08ADColumnD0C_tF":{"name":"add(value:)","abstract":"<p>Adds the given column schema to the table&rsquo;s collection of columns.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC9hasColumn5namedSbSS_tF":{"name":"hasColumn(named:)","abstract":"<p>Checks to see if the table contains a column with the given name.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the table schema into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.</p>","parent_name":"ADTableSchema"},"Classes/ADTableSchema.html#/s:12SwiftletData13ADTableSchemaC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the table schema from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADTableSchema"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC6tablesSDySSAA07ADTableD0CGvp":{"name":"tables","abstract":"<p>The collection of tables stored in the Data Store.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC17isTransactionOpenSbvp":{"name":"isTransactionOpen","abstract":"<p>Returns <code>true</code> if a transaction is currently open, else returns <code>false</code>.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC17lastInsertedRowIDSivp":{"name":"lastInsertedRowID","abstract":"<p>Returns the row ID of the table that a record was last inserted into.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC22numberOfRecordsChangedSivp":{"name":"numberOfRecordsChanged","abstract":"<p>Returns the number of rows modified by the last SQL command.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of the Data Store.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Initializes a new <code>ADDataStore</code> and sets its initial properties.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC8fromSPONACSS_tcfc":{"name":"init(fromSPON:)","abstract":"<p>Initializes a new <code>ADDataStore</code> and sets its initial properties.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC8hasTable5namedSbSS_tF":{"name":"hasTable(named:)","abstract":"<p>Checks to see if the Data Source contains a table with the given name.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC10prepareSQL_10parametersS2S_SayypGtKF":{"name":"prepareSQL(_:parameters:)","abstract":"<p>Prepares a SQL Statement for execution by replacing instances of the <code>?</code> character with the values from the given array of parameter values. The values will be properly escaped before being added to the data stream.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC7execute_10parametersySS_SayypGtKF":{"name":"execute(_:parameters:)","abstract":"<p>Executes a non-query SQL statement against the Data Store. <code>ADDataStore</code> understands a subset of the full SQL instruction set (as known by SQLite) and as such, creating indexes, triggers, views and named save points are not currently supported.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC5query_10parametersSaySDySSypGGSS_SayypGtKF":{"name":"query(_:parameters:)","abstract":"<p>Use the <code>query</code> method to execute query SQL statements and return rows matching the result. <code>ADDataStore</code> understands a subset of the full SQL instruction set (as known by SQLite), however, most common <strong>SELECT</strong> statements should work as expected.</p>","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the data store into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADDataStore"},"Classes/ADDataStore.html#/s:12SwiftletData11ADDataStoreC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the data store from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADDataStore"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC2idSivp":{"name":"id","abstract":"<p>The column&rsquo;s unique id.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC4nameSSvp":{"name":"name","abstract":"<p>The column&rsquo;s name.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC4typeAA15ADSQLColumnTypeOvp":{"name":"type","abstract":"<p>The type of the columns sych as <code>TEXT</code>, <code>BOOLEAN</code>, <code>DATE</code>, etc.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC10allowsNullSbvp":{"name":"allowsNull","abstract":"<p><code>true</code> if the value of this column can be <code>null</code>, else <code>false</code>.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC12defaultValueypSgvp":{"name":"defaultValue","abstract":"<p>The default value for this column if no value is provided during an <code>INSERT</code> or <code>UPDATE</code> operation.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC12isPrimaryKeySbvp":{"name":"isPrimaryKey","abstract":"<p><code>true</code> if this column is the table&rsquo;s primary key.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC11isKeyUniqueSbvp":{"name":"isKeyUnique","abstract":"<p><code>true</code> if the key value must be unique, else <code>false</code>.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC13autoIncrementSbvp":{"name":"autoIncrement","abstract":"<p>If the column is a PRIMARY KEY of the INTEGER type, is it automatically incremented when a new row is created in the table.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC15checkExpressionAA15ADSQLExpression_pSgvp":{"name":"checkExpression","abstract":"<p>Holds the expression for a Check constraint.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC12fromInstanceAcA20ADInstanceDictionaryC_tcfc":{"name":"init(fromInstance:)","abstract":"<p>Initializes a new <code>ADColumnSchema</code> and sets its initial properties.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC2id4name4typeACSi_SSAA15ADSQLColumnTypeOtcfc":{"name":"init(id:name:type:)","abstract":"<p>Initializes a new <code>ADColumnSchema</code> and sets its initial properties.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC2id4name4type10allowsNull12isPrimaryKey12defaultValue0jL6UniqueACypSg_A5KSbtcfc":{"name":"init(id:name:type:allowsNull:isPrimaryKey:defaultValue:isKeyUnique:)","abstract":"<p>Initializes a new <code>ADColumnSchema</code> and sets its initial properties.</p>","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC6encodeAA20ADInstanceDictionaryCyF":{"name":"encode()","abstract":"<p>Encodes the column schema into an Instance Dictionary for storage in a Swift Portable Object Notation (SPON) format.","parent_name":"ADColumnSchema"},"Classes/ADColumnSchema.html#/s:12SwiftletData14ADColumnSchemaC6decode12fromInstanceyAA20ADInstanceDictionaryC_tF":{"name":"decode(fromInstance:)","abstract":"<p>Decodes the column schema from an Instance Dictionary that has been read from a Swift Portable Object Notation (SPON) stream.</p>","parent_name":"ADColumnSchema"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC0D26KitRecordCompletionHandlera":{"name":"CloudKitRecordCompletionHandler","abstract":"<p>Defines a type alias returned from a call to a CloudKit database function.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC0D28KitRecordIDCompletionHandlera":{"name":"CloudKitRecordIDCompletionHandler","abstract":"<p>Defines a type alias returned from a call to a CloudKit database function.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC0D29KitRecordSetCompletionHandlera":{"name":"CloudKitRecordSetCompletionHandler","abstract":"<p>Defines a type alias returned from a call to a CloudKit database function.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC02isD12KitAvailableSbvp":{"name":"isCloudKitAvailable","abstract":"<p>If <code>true</code> CloudKit is available, else it isn&rsquo;t.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC04ShowD14KitAccessAlert7appName3for11showMessageySS_SSySS_SStctFZ":{"name":"ShowCloudKitAccessAlert(appName:for:showMessage:)","abstract":"<p>Displays an error alert to the user when error occurrs trying to read, write or delete from CloudKit.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC04showD13KitErrorAlert7appName3for4with0F7MessageySS_SSs0H0_pySS_SStctFZ":{"name":"showCloudKitErrorAlert(appName:for:with:showMessage:)","abstract":"<p>Displayes an error alert to the user when error occurrs trying to read, write or delete from CloudKit.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC6sharedACvpZ":{"name":"shared","abstract":"<p>Provides access to a common, shared instance of the <code>ADiCloudProvider</code>. For app&rsquo;s that are working with a single private iCloud database, they can use this instance instead of creating their own instance of a <code>ADiCloudProvider</code>.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC12sharedPublicACvpZ":{"name":"sharedPublic","abstract":"<p>Provides access to a common, shared instance of the <code>ADiCloudProvider</code>. For app&rsquo;s that are working with a single public iCloud database, they can use this instance instead of creating their own instance of a <code>ADiCloudProvider</code>.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC24autoIncrementingKeyValueSivpZ":{"name":"autoIncrementingKeyValue","abstract":"<p>The current value of an auto incrementing integer key used for CloudKit records.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC02isD12KitAvailableSbvpZ":{"name":"isCloudKitAvailable","abstract":"<p>Returns <code>true</code> if CloudKit is available on the given device, else returns <code>false</code>.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC10isReadOnlySbvp":{"name":"isReadOnly","abstract":"<p>Returns <code>true</code> if the data provider can write to the currently open iCloud database, else returns <code>false</code>.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC21cloudKitAccountStatusSo09CKAccountI0Vvp":{"name":"cloudKitAccountStatus","abstract":"<p>Holds the current user&rsquo;s CloudKit account status.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC6isOpenSbvp":{"name":"isOpen","abstract":"<p>Returns <code>true</code> if a iCloud database currently open in the data provider, else returns <code>false</code>.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC11hasMoreRowsSbvp":{"name":"hasMoreRows","abstract":"<p>Are there more rows waiting after performing a fetch of records that resulted in a large number of records being returned?</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC10openSource19containerIdentifier4typeySSSg_AA0cD12DatabaseTypeOtKF":{"name":"openSource(containerIdentifier:type:)","abstract":"<p>Opens a CloudKit container and database with the given parameters.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC11closeSourceyyF":{"name":"closeSource()","abstract":"<p>Closes any open iCloud container and database.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC9lastIntID8forTable7withKeySiSS_SStKF":{"name":"lastIntID(forTable:withKey:)","abstract":"<p>Gets the largest used number for the given integer primary key of the given table.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC4makeyxxmKAA11ADDataTableRzlF":{"name":"make(_:)","abstract":"<p>Creates an instance of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class automatically setting the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong>.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC6makeIDyypSgxmAA11ADDataTableRzlF":{"name":"makeID(_:)","abstract":"<p>Returns a value for the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong> for a class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC11isUndefined3keySbyp_tF":{"name":"isUndefined(key:)","abstract":"<p>Tests to see if the given key holds a valid value to be a key in a CloudKit database.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC19registerTableSchema_17withDefaultValuesyxm_xtKAA06ADDataG0RzlF":{"name":"registerTableSchema(_:withDefaultValues:)","abstract":"<p>Registers the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class schema with the data provider and creates a table for the class if it doesn&rsquo;t already exist.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC4save_14updateIfExists17completionHandleryx_SbySo8CKRecordCSg_s5Error_pSgtcSgtKAA11ADDataTableRzlF":{"name":"save(_:updateIfExists:completionHandler:)","abstract":"<p>Saves the given class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the database. If the iCloud database does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value a new record will be created, else an error will be thrown.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC6update_17completionHandleryx_ySo8CKRecordCSg_s5Error_pSgtcSgtKAA11ADDataTableRzlF":{"name":"update(_:completionHandler:)","abstract":"<p>Updates the given class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the database. If the iCloud database does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value an error will be thrown, else the existing record will be updated.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC6delete_17completionHandleryx_ySo10CKRecordIDCSg_s5Error_pSgtcSgtKAA11ADDataTableRzlF":{"name":"delete(_:completionHandler:)","abstract":"<p>Removes the given record from the database.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC6delete_18forPrimaryKeyValue17completionHandleryxm_ypySo10CKRecordIDCSg_s5Error_pSgtcSgtKAA11ADDataTableRzlF":{"name":"delete(_:forPrimaryKeyValue:completionHandler:)","abstract":"<p>Deletes any record matching the given id from the database.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC7loadRow6ofType18forPrimaryKeyValue17completionHandleryxm_ypyxSg_s5Error_pSgtctKAA11ADDataTableRzlF":{"name":"loadRow(ofType:forPrimaryKeyValue:completionHandler:)","abstract":"<p>Loads an object of the given type with the given primary key value.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC8loadRows6ofType13matchingQuery6sortBy0L9Assending14withParameters17completionHandleryxm_S2SSbSayypGSgySayxGSg_s5Error_pSgtctKAA11ADDataTableRzlF":{"name":"loadRows(ofType:matchingQuery:sortBy:sortAssending:withParameters:completionHandler:)","abstract":"<p>Loads any objects of the given type matching the given query. Use <code>loadRows</code> over <code>getRows</code> when you know a query will return a small number of records or if you don&rsquo;t want to limit the number of rows returned.</p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC7getRows6ofType13matchingQuery14withParameters5limit17completionHandleryxm_SSSayypGSgSiySayxGSg_s5Error_pSgtctKAA11ADDataTableRzlF":{"name":"getRows(ofType:matchingQuery:withParameters:limit:completionHandler:)","abstract":"<p>Loads any objects of the given type matching the given query up to the given limit. Use <code>getRows</code> over <code>loadRows</code> when the resulting dataset returned could be larger than the maximum number of records that CloudKit will return in a single query or if you wish to limit the number of rows returned. See: <a href=\"https://www.hackingwithswift.com/read/33/6/reading-from-icloud-with-cloudkit-ckqueryoperation-and-nspredicate\">https://www.hackingwithswift.com/read/33/6/reading-from-icloud-with-cloudkit-ckqueryoperation-and-nspredicate</a></p>","parent_name":"ADiCloudProvider"},"Classes/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC16getRemainingRows6ofType17completionHandleryxm_ySayxGSg_s5Error_pSgtctKAA11ADDataTableRzlF":{"name":"getRemainingRows(ofType:completionHandler:)","abstract":"<p>After performing a <code>getRows</code> call, if the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADiCloudProvider.html#/s:12SwiftletData16ADiCloudProviderC11hasMoreRowsSbvp\">hasMoreRows</a></code> property is <code>true</code> use this function to return the remaining rows.</p>","parent_name":"ADiCloudProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6sharedACvpZ":{"name":"shared","abstract":"<p>Provides access to a common, shared instance of the <code>ADSQLiteProvider</code>. For app&rsquo;s that are working with a single SQLite database, they can use this instance instead of creating their own instance of a <code>ADSQLiteProvider</code>.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC4pathSSvp":{"name":"path","abstract":"<p>Reference to the currently open database path or &ldquo;&rdquo; if no database is currently open.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC12databaseNameSSvp":{"name":"databaseName","abstract":"<p>The name of the currently open SQLite database or &ldquo;&rdquo; if no database is currently open.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC15databaseVersionSivp":{"name":"databaseVersion","abstract":"<p>Gets the current user-defined version number for the database. This value can be useful in managing data migrations so that you can add new columns to your tables or massage your existing data to suit a new situation.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6isOpenSbvp":{"name":"isOpen","abstract":"<p>Returns <code>true</code> if a SQLite database currently open in the data provider, else returns <code>false</code>.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC10isReadOnlySbvp":{"name":"isReadOnly","abstract":"<p>Returns <code>true</code> if the data provider can write to the currently open SQLite database, else returns <code>false</code>.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC11knownTablesSaySSGvp":{"name":"knownTables","abstract":"<p>An array of all tables that have been read from or written to the given data source.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of a <code>ADSQLiteProvider</code>.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC11forgetTableyySSF":{"name":"forgetTable(_:)","abstract":"<p>Removes the given table from the list of known table names.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC10openSource_10fromBundle8readOnlyySS_S2btKF":{"name":"openSource(_:fromBundle:readOnly:)","abstract":"<p>Opens the given SQLite database file for the data provider from either the app&rsquo;s Document or Bundle directories. If opening a database from the Document directory and it does not exist, the database will automatically be created. If opening a database from the Bundle directory for write access, the database will first be copied to the Document directory (if a copy doesn&rsquo;t already exist there), and the Document directory copy of the database will be opened.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC12createSourceyySSKF":{"name":"createSource(_:)","abstract":"<p>Creates the given SQLite database file for the data provider in the app&rsquo;s Document directory. If the database file already exists, it will be opened instead.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC10saveSourceyySSKF":{"name":"saveSource(_:)","abstract":"<p>Closes the currently open SQLite database, copies it to a new filename and reopens the database under the new name.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC7persistyyKF":{"name":"persist()","abstract":"<p>The <code>persist</code> function is used to write in-memory Data Provider content to persistant data storage. This command has no affect on a SQLite database.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC11closeSourceyyKF":{"name":"closeSource()","abstract":"<p>Close the currently open SQLite database. Before closing the database, the framework automatically takes care of database optimization at frequent intervals by running the following commands:</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC12deleteSourceyySSKF":{"name":"deleteSource(_:)","abstract":"<p>For writable databases stored in the app&rsquo;s document directory, delete the data source with the specified file name.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC7execute_14withParametersSiSS_SayypGSgtKF":{"name":"execute(_:withParameters:)","abstract":"<p>Execute SQL (non-query) command with (optional) parameters and return result code.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC5query_14withParametersSaySDySSypGGSS_SayypGSgtKF":{"name":"query(_:withParameters:)","abstract":"<p>Run an SQL query with (parameters) parameters and returns an array of dictionaries where the keys are the column names.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC11tableExistsySbSSKF":{"name":"tableExists(_:)","abstract":"<p>Checks to see if the given table exists in the SQLite database.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC9countRows7inTable10filteredBy14withParametersSiSS_SSSayypGSgtKF":{"name":"countRows(inTable:filteredBy:withParameters:)","abstract":"<p>Counts the number of records in a given SQLite database table, optionally filtered by a given set of contraints.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC9lastIntID8forTable7withKeySiSS_SStKF":{"name":"lastIntID(forTable:withKey:)","abstract":"<p>Gets the largest used number for the given integer primary key of the given table.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC10lastAutoID8forTableSiSS_tKF":{"name":"lastAutoID(forTable:)","abstract":"<p>Gets the last auto generated integer ID for the given table.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC14getTableSchema03forF4NameAA07ADTableG0CSS_tKF":{"name":"getTableSchema(forTableName:)","abstract":"<p>Returns all information about a given table in the SQLite database including all of the columns and their types.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC16beginTransactionyyKF":{"name":"beginTransaction()","abstract":"<p>Starts an explicit transaction to process a batch of database changes. Once started, the transaction will remain open until it is either committed (via <code>endTransaction</code>) or rolled-back (via `rollbackTransaction).</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC14endTransactionyyKF":{"name":"endTransaction()","abstract":"<p>Attempts to commit any chages to the database and close the current transaction that was opened using <code>beginTransaction</code>.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC19rollbackTransactionyyKF":{"name":"rollbackTransaction()","abstract":"<p>Ends the current transaction (opened using <code>beginTransaction</code>) and undoes any changes made to the database since the transaction was opened.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC19registerTableSchema_17withDefaultValuesyxm_xtKAA06ADDataF0RzlF":{"name":"registerTableSchema(_:withDefaultValues:)","abstract":"<p>Registers the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class schema with the data provider and creates a table for the class if it doesn&rsquo;t already exist.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC17updateTableSchema_17withDefaultValuesyxm_xtKAA06ADDataF0RzlF":{"name":"updateTableSchema(_:withDefaultValues:)","abstract":"<p>Attempts to modify the SQLite database table schema to match the schema of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class if the schema has changed. If the table does not exist, it will attempt to be registered with the database. If any new columns have been added, the default values will be set from the given defaults.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6hasRow7forType18matchingPrimaryKeySbxm_yptKAA11ADDataTableRzlF":{"name":"hasRow(forType:matchingPrimaryKey:)","abstract":"<p>Checks to see if a row matching the given primary key exists in the underlying SQLite table.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC8rowCount7forType8filterBy14withParametersSixm_SSSayypGSgtKAA11ADDataTableRzlF":{"name":"rowCount(forType:filterBy:withParameters:)","abstract":"<p>Return the count of rows in the table, or the count of rows matching a specific filter criteria, if one was provided.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC4makeyxxmKAA11ADDataTableRzlF":{"name":"make(_:)","abstract":"<p>Creates an instance of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class automatically setting the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong>.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6makeIDyypSgxmAA11ADDataTableRzlF":{"name":"makeID(_:)","abstract":"<p>Returns a value for the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong> for a class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC4saveyypxKAA11ADDataTableRzlF":{"name":"save(_:)","abstract":"<p>Saves the given class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the database. If the SQLite database does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value, a new record will be created, else the existing record will be updated.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC4saveyySayxGKAA11ADDataTableRzlF":{"name":"save(_:)","abstract":"<p>Saves the given array of class instances conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the database. If the SQLite database does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value, a new record will be created, else the existing record will be updated.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC7getRows6ofType10fliteredBy07orderedJ010startingAt9limitedTo14withParametersSayxGxm_S2SS2iSayypGSgtKAA11ADDataTableRzlF":{"name":"getRows(ofType:fliteredBy:orderedBy:startingAt:limitedTo:withParameters:)","abstract":"<p>Returns rows from the SQLite database of the given class type optionally filtered, sorted and limited to a specific range of results.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC7getRows6ofType11matchingSQL14withParametersSayxGxm_SSSayypGSgtKAA11ADDataTableRzlF":{"name":"getRows(ofType:matchingSQL:withParameters:)","abstract":"<p>Returns rows from the SQLite database of the given class type matching the given SQL statement.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6getRow6ofType18forPrimaryKeyValuexSgxm_yptKAA11ADDataTableRzlF":{"name":"getRow(ofType:forPrimaryKeyValue:)","abstract":"<p>Returns a row from the SQLite database of the given class type matching the given primary key value.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6getRow6ofType7atIndex10fliteredBy07orderedL014withParametersxSgxm_SiS2SSayypGSgtKAA11ADDataTableRzlF":{"name":"getRow(ofType:atIndex:fliteredBy:orderedBy:withParameters:)","abstract":"<p>Returns a row from the SQLite database of the given class type optionally filtered and limited to a specific range of results.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6deleteyyxKAA11ADDataTableRzlF":{"name":"delete(_:)","abstract":"<p>Deletes the row matching the given record from the SQLite database.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC6deleteyySayxGKAA11ADDataTableRzlF":{"name":"delete(_:)","abstract":"<p>Deletes the given set of records from the database.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSQLiteProvider.html#/s:12SwiftletData16ADSQLiteProviderC9dropTableyyxmKAA06ADDataF0RzlF":{"name":"dropTable(_:)","abstract":"<p>Drops the underlying table from the SQLite database, completely removing all stored data in the table as well as the table itself.</p>","parent_name":"ADSQLiteProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6sharedACvpZ":{"name":"shared","abstract":"<p>Provides access to a common, shared instance of the <code>ADSPONProvider</code>. For app&rsquo;s that are working with a single SPON database, they can use this instance instead of creating their own instance of a <code>ADSPONProvider</code>.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC4pathSSvp":{"name":"path","abstract":"<p>Reference to the currently open database path or &ldquo;&rdquo; if no database is currently open.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC12databaseNameSSvp":{"name":"databaseName","abstract":"<p>The name of the currently open SPON database or &ldquo;&rdquo; if no database is currently open.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC15databaseVersionSivp":{"name":"databaseVersion","abstract":"<p>Gets the current user-defined version number for the database. This value can be useful in managing data migrations so that you can add new columns to your tables or massage your existing data to suit a new situation.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6isOpenSbvp":{"name":"isOpen","abstract":"<p>Returns <code>true</code> if a SPON data source is open in-memory, else returns <code>false</code>.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC10isReadOnlySbvp":{"name":"isReadOnly","abstract":"<p>Returns <code>true</code> if the data provider can write to the currently open SPON database, else returns <code>false</code>.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC11knownTablesSaySSGvp":{"name":"knownTables","abstract":"<p>An array of all tables that have been read from or written to the given data source.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderCACycfc":{"name":"init()","abstract":"<p>Initializes a new instance of a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code>.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC11forgetTableyySSF":{"name":"forgetTable(_:)","abstract":"<p>Removes the given table from the list of known table names.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC10openSource_10fromBundle8readOnlyySS_S2btKF":{"name":"openSource(_:fromBundle:readOnly:)","abstract":"<p>Opens the given SPON database file for the data provider from either the app&rsquo;s Document or Bundle directories. If opening a database from the Document directory and it does not exist, the database will automatically be created. If opening a database from the Bundle directory for write access, the database will first be copied to the Document directory (if a copy doesn&rsquo;t already exist there), and the Document directory copy of the database will be opened.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC12createSourceyySSKF":{"name":"createSource(_:)","abstract":"<p>Creates the given SPON database file for the data provider in the app&rsquo;s Document directory. If the database file already exists, it will be opened instead.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC10saveSourceyySSKF":{"name":"saveSource(_:)","abstract":"<p>Saves the SPON database to the given filename.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC7persistyyKF":{"name":"persist()","abstract":"<p>Attempts to persist the in-memory data store to disk if the database is open, not read only and was origionally opened from a persistant source.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC11closeSourceyyKF":{"name":"closeSource()","abstract":"<p>Attempts to persist and close the currently open SPON database.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC12deleteSourceyySSKF":{"name":"deleteSource(_:)","abstract":"<p>For writable databases stored in the app&rsquo;s document directory, delete the data source with the specified file name.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC7execute_14withParametersSiSS_SayypGSgtKF":{"name":"execute(_:withParameters:)","abstract":"<p>Execute SQL (non-query) command with (optional) parameters and return result code.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC5query_14withParametersSaySDySSypGGSS_SayypGSgtKF":{"name":"query(_:withParameters:)","abstract":"<p>Run an SQL query with (parameters) parameters and returns an array of dictionaries where the keys are the column names.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC11tableExistsySbSSKF":{"name":"tableExists(_:)","abstract":"<p>Checks to see if the given table exists in the SPON database.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC9countRows7inTable10filteredBy14withParametersSiSS_SSSayypGSgtKF":{"name":"countRows(inTable:filteredBy:withParameters:)","abstract":"<p>Counts the number of records in a given SPON database table, optionally filtered by a given set of contraints.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC9lastIntID8forTable7withKeySiSS_SStKF":{"name":"lastIntID(forTable:withKey:)","abstract":"<p>Gets the largest used number for the given integer primary key of the given table.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC10lastAutoID8forTableSiSS_tKF":{"name":"lastAutoID(forTable:)","abstract":"<p>Gets the last auto generated integer ID for the given table.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC14getTableSchema03forE4NameAA07ADTableF0CSS_tKF":{"name":"getTableSchema(forTableName:)","abstract":"<p>Returns all information about a given table in the SPON database including all of the columns and their types.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC16beginTransactionyyKF":{"name":"beginTransaction()","abstract":"<p>Starts an explicit transaction to process a batch of database changes. Once started, the transaction will remain open until it is either committed (via <code>endTransaction</code>) or rolled-back (via <code>rollbackTransaction</code>).</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC14endTransactionyyKF":{"name":"endTransaction()","abstract":"<p>Attempts to commit any chages to the database and close the current transaction that was opened using <code>beginTransaction</code>.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC19rollbackTransactionyyKF":{"name":"rollbackTransaction()","abstract":"<p>Ends the current transaction (opened using <code>beginTransaction</code>) and undoes any changes made to the database since the transaction was opened.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC19registerTableSchema_17withDefaultValuesyxm_xtKAA06ADDataE0RzlF":{"name":"registerTableSchema(_:withDefaultValues:)","abstract":"<p>Registers the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class schema with the data provider and creates a table for the class if it doesn&rsquo;t already exist.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC17updateTableSchema_17withDefaultValuesyxm_xtKAA06ADDataE0RzlF":{"name":"updateTableSchema(_:withDefaultValues:)","abstract":"<p>Attempts to modify the SPON database table schema to match the schema of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class if the schema has changed. If the table does not exist, it will attempt to be registered with the database. If any new columns have been added, the default values will be set from the given defaults.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6hasRow7forType18matchingPrimaryKeySbxm_yptKAA11ADDataTableRzlF":{"name":"hasRow(forType:matchingPrimaryKey:)","abstract":"<p>Checks to see if a row matching the given primary key exists in the underlying SPON table.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC8rowCount7forType8filterBy14withParametersSixm_SSSayypGSgtKAA11ADDataTableRzlF":{"name":"rowCount(forType:filterBy:withParameters:)","abstract":"<p>Return the count of rows in the table, or the count of rows matching a specific filter criteria, if one was provided.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC4makeyxxmKAA11ADDataTableRzlF":{"name":"make(_:)","abstract":"<p>Creates an instance of the given <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> class automatically setting the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong>.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6makeIDyypSgxmAA11ADDataTableRzlF":{"name":"makeID(_:)","abstract":"<p>Returns a value for the <strong>primaryKey</strong> field based on the value of the <strong>primaryKeyType</strong> for a class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC4saveyypxKAA11ADDataTableRzlF":{"name":"save(_:)","abstract":"<p>Saves the given class conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the database. If the SPON database does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value, a new record will be created, else the existing record will be updated.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC4saveyySayxGKAA11ADDataTableRzlF":{"name":"save(_:)","abstract":"<p>Saves the given array of class instances conforming to the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> protocol to the database. If the SPON database does not contain a table named in the <strong>tableName</strong> property, one will be created first. If a record is not on file matching the <strong>primaryKey</strong> value, a new record will be created, else the existing record will be updated.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC7getRows6ofType10fliteredBy07orderedI010startingAt9limitedTo14withParametersSayxGxm_S2SS2iSayypGSgtKAA11ADDataTableRzlF":{"name":"getRows(ofType:fliteredBy:orderedBy:startingAt:limitedTo:withParameters:)","abstract":"<p>Returns rows from the SPON database of the given class type optionally filtered, sorted and limited to a specific range of results.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC7getRows6ofType11matchingSQL14withParametersSayxGxm_SSSayypGSgtKAA11ADDataTableRzlF":{"name":"getRows(ofType:matchingSQL:withParameters:)","abstract":"<p>Returns rows from the SPON database of the given class type matching the given SQL statement.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6getRow6ofType18forPrimaryKeyValuexSgxm_yptKAA11ADDataTableRzlF":{"name":"getRow(ofType:forPrimaryKeyValue:)","abstract":"<p>Returns a row from the SPON database of the given class type matching the given primary key value.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6getRow6ofType7atIndex10fliteredBy07orderedK014withParametersxSgxm_SiS2SSayypGSgtKAA11ADDataTableRzlF":{"name":"getRow(ofType:atIndex:fliteredBy:orderedBy:withParameters:)","abstract":"<p>Returns a row from the SPON database of the given class type optionally filtered and limited to a specific range of results.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6deleteyyxKAA11ADDataTableRzlF":{"name":"delete(_:)","abstract":"<p>Deletes the row matching the given record from the SPON database.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC6deleteyySayxGKAA11ADDataTableRzlF":{"name":"delete(_:)","abstract":"<p>Deletes the given set of records from the database.</p>","parent_name":"ADSPONProvider"},"Classes/ADSPONProvider.html#/s:12SwiftletData14ADSPONProviderC9dropTableyyxmKAA06ADDataE0RzlF":{"name":"dropTable(_:)","abstract":"<p>Drops the underlying table from the SPON database, completely removing all stored data in the table as well as the table itself.</p>","parent_name":"ADSPONProvider"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC11escapeValueyS2SFZ":{"name":"escapeValue(_:)","abstract":"<p>Converts a given value into a format that can be safely stored in an <code>ADInstanceDictionary</code> portable, human-readable string format.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC13unescapeValueyS2SFZ":{"name":"unescapeValue(_:)","abstract":"<p>Converts a value stored in portable, human-readable string format and converts it back to its original format.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC6decodeyACSSFZ":{"name":"decode(_:)","abstract":"<p>Takes a <code>ADInstanceDictionary</code> object stored in a portable, human-readable string format and converts it to a dictionary of the original values.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC12subTableNameSSvp":{"name":"subTableName","abstract":"<p>Stores the name a sub <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> used in a one-to-one foreign key relationship with the main table.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC18subTablePrimaryKeySSvp":{"name":"subTablePrimaryKey","abstract":"<p>Stores the name of the primary key for a sub <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> used in a one-to-one foreign key relationship with the main table.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC22subTablePrimaryKeyTypeAA06ADDatafhI0Ovp":{"name":"subTablePrimaryKeyType","abstract":"<p>Stores the primary key type for a sub <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> used in a one-to-one foreign key relationship with the main table.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC7storageSDySSypGvp":{"name":"storage","abstract":"<p>A dictionary of key/value pairs from the coded object.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC8typeNameSSvp":{"name":"typeName","abstract":"<p>The name of the type of object being encoded in the dictionary</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceDictionary.html#/s:12SwiftletData20ADInstanceDictionaryC6encodeSSyF":{"name":"encode()","abstract":"<p>Converts the <code>ADInstanceDictionary</code> instance to a portable, human-readable string format.</p>","parent_name":"ADInstanceDictionary"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC11escapeValueyS2SFZ":{"name":"escapeValue(_:)","abstract":"<p>Converts a given value into a format that can be safely stored in an <code>ADInstanceArray</code> portable, human-readable string format.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC13unescapeValueyS2SFZ":{"name":"unescapeValue(_:)","abstract":"<p>Converts a value stored in portable, human-readable string format and converts it back to its original format.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC6decodeyACSSFZ":{"name":"decode(_:)","abstract":"<p>Takes a <code>ADInstanceArray</code> object stored in a portable, human-readable string format and converts it to an array of the original values.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC12subTableNameSSvp":{"name":"subTableName","abstract":"<p>Stores the name a sub <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> used in a one-to-one foreign key relationship with the main table.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC18subTablePrimaryKeySSvp":{"name":"subTablePrimaryKey","abstract":"<p>Stores the name of the primary key for a sub <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> used in a one-to-one foreign key relationship with the main table.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC22subTablePrimaryKeyTypeAA06ADDatafhI0Ovp":{"name":"subTablePrimaryKeyType","abstract":"<p>Stores the primary key type for a sub <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADDataTable.html\">ADDataTable</a></code> used in a one-to-one foreign key relationship with the main table.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC7storageSayypGvp":{"name":"storage","abstract":"<p>An array of values encoded from the object.</p>","parent_name":"ADInstanceArray"},"Classes/ADInstanceArray.html#/s:12SwiftletData15ADInstanceArrayC6encodeSSyF":{"name":"encode()","abstract":"<p>Converts the <code>ADInstanceArray</code> instance to a portable, human-readable string format.</p>","parent_name":"ADInstanceArray"},"Classes/ADSQLEncoder/DataEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC0B16EncodingStrategyO03rawB0yA2EmF":{"name":"rawData","abstract":"<p>The raw <code>Data</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> and is handled directly by a SQL Data Provider. This is the default strategy.</p>","parent_name":"DataEncodingStrategy"},"Classes/ADSQLEncoder/DataEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC0B16EncodingStrategyO010deferredToB0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for choosing an encoding.</p>","parent_name":"DataEncodingStrategy"},"Classes/ADSQLEncoder/DataEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC0B16EncodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Encoded the <code>Data</code> as a Base64-encoded string.</p>","parent_name":"DataEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC20DateEncodingStrategyO03rawD0yA2EmF":{"name":"rawDate","abstract":"<p>The raw <code>Date</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> and is handled directly by a SQL Data Provider. This is the default strategy.</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC20DateEncodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for choosing an encoding.</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC20DateEncodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a UNIX timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC20DateEncodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as UNIX millisecond timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC20DateEncodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html#/s:12SwiftletData12ADSQLEncoderC20DateEncodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSQLEncoder/DateEncodingStrategy.html":{"name":"DateEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code> values.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder/DataEncodingStrategy.html":{"name":"DataEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code> values.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC16iso8601FormatterSo013NSISO8601DateE0CvpZ":{"name":"iso8601Formatter","abstract":"<p>Shared formatter used to encode a <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC10codingPathSays9CodingKey_pGvp":{"name":"codingPath","abstract":"<p>The path to the element currently being encoded.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>User specific, additional information to be encoded in the output.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC20dateEncodingStrategyAC04DateeF0Ovp":{"name":"dateEncodingStrategy","abstract":"<p>The strategy used to encode <code>Date</code> properties. The default is <code>rawDate</code> which allow the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code> to handle the date directly.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC20dataEncodingStrategyAC0beF0Ovp":{"name":"dataEncodingStrategy","abstract":"<p>The strategy used to encode <code>Data</code> or <code>NSData</code> properties. The default is <code>rawData</code> which allow the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code> to handle the data directly.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC20dateEncodingStrategy04dataeF0A2C04DateeF0O_AC0beF0Otcfc":{"name":"init(dateEncodingStrategy:dataEncodingStrategy:)","abstract":"<p>Creates a new instance of the encoder.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC6encodeyypxKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes a <code>Codable</code> or <code>Encodable</code> class into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> that can be written into a SQLite database using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code>. The result is a dictionary of key/value pairs representing the data currently stored in the class. This encoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Encodable</code>). For example:</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF":{"name":"container(keyedBy:)","abstract":"<p>Returns a key/value encoding container for the given key type.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC16unkeyedContainers015UnkeyedEncodingE0_pyF":{"name":"unkeyedContainer()","abstract":"<p>Returns an unkeyed encodign container.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC20singleValueContainers06Singlee8EncodingF0_pyF":{"name":"singleValueContainer()","abstract":"<p>Returns a single value encoding container.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC3boxyyp10Foundation4DateVKF":{"name":"box(_:)","abstract":"<p>Stores a Date value for encoding.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC3boxyyp10Foundation0B0VKF":{"name":"box(_:)","abstract":"<p>Stores a Data value for encoding.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLEncoder.html#/s:12SwiftletData12ADSQLEncoderC3boxyypxKSERzlF":{"name":"box(_:)","abstract":"<p>Stores any <code>Encodable</code> data type in a format suitable for encoding.</p>","parent_name":"ADSQLEncoder"},"Classes/ADSQLDecoder/DataDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC0B16DecodingStrategyO03rawB0yA2EmF":{"name":"rawData","abstract":"<p>The raw <code>Data</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> directly from a SQL Data Provider. This is the default strategy.</p>","parent_name":"DataDecodingStrategy"},"Classes/ADSQLDecoder/DataDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC0B16DecodingStrategyO010deferredToB0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for choosing an encoding.</p>","parent_name":"DataDecodingStrategy"},"Classes/ADSQLDecoder/DataDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC0B16DecodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Encoded the <code>Data</code> as a Base64-encoded string.</p>","parent_name":"DataDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC20DateDecodingStrategyO03rawD0yA2EmF":{"name":"rawDate","abstract":"<p>The raw <code>Date</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> directly from a SQL Data Provider. This is the default strategy.</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC20DateDecodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for choosing an encoding.</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC20DateDecodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a UNIX timestamp (as a JSON number).</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC20DateDecodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as UNIX millisecond timestamp (as a JSON number).</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC20DateDecodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html#/s:12SwiftletData12ADSQLDecoderC20DateDecodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSQLDecoder/DateDecodingStrategy.html":{"name":"DateDecodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code> values.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder/DataDecodingStrategy.html":{"name":"DataDecodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code> values.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC9sqlObject2inypSgyp_tFZ":{"name":"sqlObject(in:)","abstract":"<p>Checks to see if a sqlObject is stored in the given data stream and returns it if it is.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC16iso8601FormatterSo013NSISO8601DateE0CvpZ":{"name":"iso8601Formatter","abstract":"<p>Shared formatter used to encode a <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC10codingPathSays9CodingKey_pGvp":{"name":"codingPath","abstract":"<p>The path to the current value that is being decoded.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>User spsecific information that can be used when decoding an item.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC20dateDecodingStrategyAC04DateeF0Ovp":{"name":"dateDecodingStrategy","abstract":"<p>The strategy used to decode <code>Date</code> properties. The default is <code>rawDate</code> which allow the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code> to handle the date directly.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC20dataDecodingStrategyAC0beF0Ovp":{"name":"dataDecodingStrategy","abstract":"<p>The strategy used to encode <code>Data</code> or <code>NSData</code> properties. The default is <code>rawData</code> which allow the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code> to handle the data directly.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC20dateDecodingStrategy04dataeF0A2C04DateeF0O_AC0beF0Otcfc":{"name":"init(dateDecodingStrategy:dataDecodingStrategy:)","abstract":"<p>Creates a new instance of the decoder.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC6decode_4fromxxm_yptKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>Decodes a <code>Codable</code> or <code>Decodable</code> class from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> read from a SQLite database using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code>. The result is an instance of the class with the properties set from the database record. This decoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Decodable</code>). For example:</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC9container7keyedBys22KeyedDecodingContainerVyxGxm_tKs9CodingKeyRzlF":{"name":"container(keyedBy:)","abstract":"<p>Returns the keyed decoding container for the given key type.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC16unkeyedContainers015UnkeyedDecodingE0_pyKF":{"name":"unkeyedContainer()","abstract":"<p>Returns an unkeyed decoding container.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSQLDecoder.html#/s:12SwiftletData12ADSQLDecoderC20singleValueContainers06Singlee8DecodingF0_pyKF":{"name":"singleValueContainer()","abstract":"<p>Returns a single value decoding container.</p>","parent_name":"ADSQLDecoder"},"Classes/ADSPONEncoder/DataEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC0B16EncodingStrategyO03rawB0yA2EmF":{"name":"rawData","abstract":"<p>The raw <code>Data</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> and is handled directly by a SQL Data Provider. This is the default strategy.</p>","parent_name":"DataEncodingStrategy"},"Classes/ADSPONEncoder/DataEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC0B16EncodingStrategyO010deferredToB0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for choosing an encoding.</p>","parent_name":"DataEncodingStrategy"},"Classes/ADSPONEncoder/DataEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC0B16EncodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Encoded the <code>Data</code> as a Base64-encoded string.</p>","parent_name":"DataEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC20DateEncodingStrategyO03rawD0yA2EmF":{"name":"rawDate","abstract":"<p>The raw <code>Date</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> and is handled directly by a SQL Data Provider. This is the default strategy.</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC20DateEncodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for choosing an encoding.</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC20DateEncodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a UNIX timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC20DateEncodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as UNIX millisecond timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC20DateEncodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html#/s:12SwiftletData13ADSPONEncoderC20DateEncodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateEncodingStrategy"},"Classes/ADSPONEncoder/DateEncodingStrategy.html":{"name":"DateEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code> values.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder/DataEncodingStrategy.html":{"name":"DataEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code> values.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC16iso8601FormatterSo013NSISO8601DateE0CvpZ":{"name":"iso8601Formatter","abstract":"<p>Shared formatter used to encode a <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC10codingPathSays9CodingKey_pGvp":{"name":"codingPath","abstract":"<p>The path to the element currently being encoded.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>User specific, additional information to be encoded in the output.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC20dateEncodingStrategyAC04DateeF0Ovp":{"name":"dateEncodingStrategy","abstract":"<p>The strategy used to encode <code>Date</code> properties. The default is <code>rawDate</code> which allow the <code>ADSPONiteProvider</code> to handle the date directly.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC20dataEncodingStrategyAC0beF0Ovp":{"name":"dataEncodingStrategy","abstract":"<p>The strategy used to encode <code>Data</code> or <code>NSData</code> properties. The default is <code>rawData</code> which allow the <code>ADSPONiteProvider</code> to handle the data directly.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC20dateEncodingStrategy04dataeF0A2C04DateeF0O_AC0beF0Otcfc":{"name":"init(dateEncodingStrategy:dataEncodingStrategy:)","abstract":"<p>Creates a new instance of the encoder.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC6encodeySSxKSERzlF":{"name":"encode(_:)","abstract":"<p>Encodes a <code>Codable</code> or <code>Encodable</code> class into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> that can be written into a SQLite database using a <code>ADSPONiteProvider</code>. The result is a dictionary of key/value pairs representing the data currently stored in the class. This encoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Encodable</code>). For example:</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC9container7keyedBys22KeyedEncodingContainerVyxGxm_ts9CodingKeyRzlF":{"name":"container(keyedBy:)","abstract":"<p>Returns a key/value encoding container for the given key type.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC16unkeyedContainers015UnkeyedEncodingE0_pyF":{"name":"unkeyedContainer()","abstract":"<p>Returns an unkeyed encodign container.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC20singleValueContainers06Singlee8EncodingF0_pyF":{"name":"singleValueContainer()","abstract":"<p>Returns a single value encoding container.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC3boxyyp10Foundation4DateVKF":{"name":"box(_:)","abstract":"<p>Stores a Date value for encoding.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC3boxyyp10Foundation0B0VKF":{"name":"box(_:)","abstract":"<p>Stores a Data value for encoding.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONEncoder.html#/s:12SwiftletData13ADSPONEncoderC3boxyypxKSERzlF":{"name":"box(_:)","abstract":"<p>Stores any <code>Encodable</code> data type in a format suitable for encoding.</p>","parent_name":"ADSPONEncoder"},"Classes/ADSPONDecoder/DataDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC0B16DecodingStrategyO03rawB0yA2EmF":{"name":"rawData","abstract":"<p>The raw <code>Data</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> directly from a SQL Data Provider. This is the default strategy.</p>","parent_name":"DataDecodingStrategy"},"Classes/ADSPONDecoder/DataDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC0B16DecodingStrategyO010deferredToB0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for choosing an encoding.</p>","parent_name":"DataDecodingStrategy"},"Classes/ADSPONDecoder/DataDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC0B16DecodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Encoded the <code>Data</code> as a Base64-encoded string.</p>","parent_name":"DataDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC20DateDecodingStrategyO03rawD0yA2EmF":{"name":"rawDate","abstract":"<p>The raw <code>Date</code> instance is encoded in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> directly from a SQL Data Provider. This is the default strategy.</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC20DateDecodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for choosing an encoding.</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC20DateDecodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a UNIX timestamp (as a JSON number).</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC20DateDecodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as UNIX millisecond timestamp (as a JSON number).</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC20DateDecodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html#/s:12SwiftletData13ADSPONDecoderC20DateDecodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateDecodingStrategy"},"Classes/ADSPONDecoder/DateDecodingStrategy.html":{"name":"DateDecodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code> values.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder/DataDecodingStrategy.html":{"name":"DataDecodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code> values.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC9sqlObject2inypSgyp_tFZ":{"name":"sqlObject(in:)","abstract":"<p>Checks to see if a sqlObject is stored in the given data stream and returns it if it is.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC16iso8601FormatterSo013NSISO8601DateE0CvpZ":{"name":"iso8601Formatter","abstract":"<p>Shared formatter used to encode a <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC10codingPathSays9CodingKey_pGvp":{"name":"codingPath","abstract":"<p>The path to the current value that is being decoded.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>User spsecific information that can be used when decoding an item.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC20dateDecodingStrategyAC04DateeF0Ovp":{"name":"dateDecodingStrategy","abstract":"<p>The strategy used to decode <code>Date</code> properties. The default is <code>rawDate</code> which allow the <code>ADSPONiteProvider</code> to handle the date directly.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC20dataDecodingStrategyAC0beF0Ovp":{"name":"dataDecodingStrategy","abstract":"<p>The strategy used to encode <code>Data</code> or <code>NSData</code> properties. The default is <code>rawData</code> which allow the <code>ADSPONiteProvider</code> to handle the data directly.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC20dateDecodingStrategy04dataeF0A2C04DateeF0O_AC0beF0Otcfc":{"name":"init(dateDecodingStrategy:dataDecodingStrategy:)","abstract":"<p>Creates a new instance of the decoder.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC6decode_4fromxxm_SStKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>Decodes a <code>Codable</code> or <code>Decodable</code> class from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> read from a SQLite database using a <code>ADSPONiteProvider</code>. The result is an instance of the class with the properties set from the database record. This decoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Decodable</code>). For example:</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC9container7keyedBys22KeyedDecodingContainerVyxGxm_tKs9CodingKeyRzlF":{"name":"container(keyedBy:)","abstract":"<p>Returns the keyed decoding container for the given key type.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC16unkeyedContainers015UnkeyedDecodingE0_pyKF":{"name":"unkeyedContainer()","abstract":"<p>Returns an unkeyed decoding container.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html#/s:12SwiftletData13ADSPONDecoderC20singleValueContainers06Singlee8DecodingF0_pyKF":{"name":"singleValueContainer()","abstract":"<p>Returns a single value decoding container.</p>","parent_name":"ADSPONDecoder"},"Classes/ADSPONDecoder.html":{"name":"ADSPONDecoder","abstract":"<p>Decodes a <code>Codable</code> or <code>Decodable</code> class from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> read from a SQLite database using a <code>ADSPONiteProvider</code>. The result is an instance of the class with the properties set from the database record. This decoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Decodable</code>).</p>"},"Classes/ADSPONEncoder.html":{"name":"ADSPONEncoder","abstract":"<p>Encodes a <code>Codable</code> or <code>Encodable</code> class into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> that can be written into a SPON database using a <code>ADSPONiteProvider</code>. The result is a dictionary of key/value pairs representing the data currently stored in the class. This encoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Encodable</code>).</p>"},"Classes/ADSQLDecoder.html":{"name":"ADSQLDecoder","abstract":"<p>Decodes a <code>Codable</code> or <code>Decodable</code> class from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> read from a SQLite database using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code>. The result is an instance of the class with the properties set from the database record. This decoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Decodable</code>).</p>"},"Classes/ADSQLEncoder.html":{"name":"ADSQLEncoder","abstract":"<p>Encodes a <code>Codable</code> or <code>Encodable</code> class into a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> that can be written into a SQLite database using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADSQLiteProvider.html\">ADSQLiteProvider</a></code>. The result is a dictionary of key/value pairs representing the data currently stored in the class. This encoder will automatically handle <code>URLs</code> and <code>Enums</code> (if the Enum is value based and also marked <code>Codable</code> or <code>Encodable</code>).</p>"},"Classes/ADInstanceArray.html":{"name":"ADInstanceArray","abstract":"<p>Defines a passable array of values used as temporary storage when encoding or decoding an Action Data class. <code>ADInstanceArray</code> also introduces support for the new <strong>Swift Portable Object Notation</strong> (SPON) data format that allows complex data models to be encoded in a portable text string that encodes not only property keys and data, but also includes type information about the encoded data. For example:</p>"},"Classes/ADInstanceDictionary.html":{"name":"ADInstanceDictionary","abstract":"<p>Defines a passable dictionary of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> values when encoding or decoding an Action Data class instance. <code>ADInstanceDictionary</code> also introduces support for the new <strong>Swift Portable Object Notation</strong> (SPON) data format that allows complex data models to be encoded in a portable text string that encodes not only property keys and data, but also includes type information about the encoded data. For example:</p>"},"Classes/ADSPONProvider.html":{"name":"ADSPONProvider","abstract":"<p>The <code>ADSPONProvider</code> provides both light-weight, low-level access to data stored in a Swift Portable Object Notation (SPON) database and high-level access via a Object Relationship Management (ORM) model. Use provided functions to read and write data stored in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> format from and to the database using SQL statements directly.</p>"},"Classes/ADSQLiteProvider.html":{"name":"ADSQLiteProvider","abstract":"<p>The <code>ADSQLiteProvider</code> provides both light-weight, low-level access to data stored in a SQLite database and high-level access via a Object Relationship Management (ORM) model. Use provided functions to read and write data stored in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> format from and to the database using SQL statements directly.</p>"},"Classes/ADiCloudProvider.html":{"name":"ADiCloudProvider","abstract":"<p>The <code>ADiCloudProvider</code> provides both light-weight, low-level access to data stored in a iCloud Database Container (public or private) and high-level access via a <strong>Object Relationship Management</strong> (ORM) model. Use provided functions to read and write data stored in a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:12SwiftletData8ADRecorda\">ADRecord</a></code> format from and to the database using SQL like statements directly.</p>"},"Classes/ADColumnSchema.html":{"name":"ADColumnSchema","abstract":"<p>Holds all of the schema information about a table schema&rsquo;s columns as read from a backing data store.</p>"},"Classes/ADDataStore.html":{"name":"ADDataStore","abstract":"<p>Represents an in-memory Data Store used to provide SQL ability to data sources that typically do not support SQL (such as JSON or XML). <code>ADDataStore</code> works with <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADTableStore.html\">ADTableStore</a></code> to define both the structure of the tables and to contain the rows of data stored in each table. <code>ADDataStore</code> understands a subset of the full SQL instruction set (as known by SQLite).</p>"},"Classes/ADTableSchema.html":{"name":"ADTableSchema","abstract":"<p>Holds all the information about a table&rsquo;s schema as read from a backing data store.</p>"},"Classes/ADTableStore.html":{"name":"ADTableStore","abstract":"<p>Represents an in-memory SQL Data Store table used to hold both the table&rsquo;s schema and the data it represents.</p>"},"Classes/ADUtilities.html":{"name":"ADUtilities","abstract":"<p>Defines a set of utilities to handle data related issues such as comparing two values of type <code>Any</code>.</p>"},"Classes/ADSQLParser.html":{"name":"ADSQLParser","abstract":"<p>Parses a SQL statement into an Action Data SQL Document Object Model (DOM). This parser currently supports a subset of SQL commands as defined by SQLite. for example:</p>"},"Classes/ADSQLBetweenExpression.html":{"name":"ADSQLBetweenExpression","abstract":"<p>Defines a between expression used in a SQL instruction to test if a value is between two other values.</p>"},"Classes/ADSQLBinaryExpression.html":{"name":"ADSQLBinaryExpression","abstract":"<p>Defines a binary operation being performed on two expressions in a SQL instruction such as adding two values or comparing two values to see if they are equal.</p>"},"Classes/ADSQLCaseExpression.html":{"name":"ADSQLCaseExpression","abstract":"<p>Defines a case clause used in a SQL instruction.</p>"},"Classes/ADSQLExpressionBuilder.html":{"name":"ADSQLExpressionBuilder","abstract":"<p>Helper class to create a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/ADSQLExpression.html\">ADSQLExpression</a></code> from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ADInstanceDictionary.html\">ADInstanceDictionary</a></code> assembled from a Swift Portable Object Notation (SPON) data stream.</p>"},"Classes/ADSQLForeignKeyExpression.html":{"name":"ADSQLForeignKeyExpression","abstract":"<p>Defines a foreign key expression used in a SQL statement.</p>"},"Classes/ADSQLFunctionExpression.html":{"name":"ADSQLFunctionExpression","abstract":"<p>Defines a function being called in a SQL instruction such as <code>count</code> or <code>sum</code>.</p>"},"Classes/ADSQLInExpression.html":{"name":"ADSQLInExpression","abstract":"<p>Defines a in expression used in a SQL instruction to see if a value is in the list of give values.</p>"},"Classes/ADSQLLiteralExpression.html":{"name":"ADSQLLiteralExpression","abstract":"<p>Defines a literal expression used in a SQL instruction such as a column name, integer value or string constant value.</p>"},"Classes/ADSQLUnaryExpression.html":{"name":"ADSQLUnaryExpression","abstract":"<p>Defines a unary expression used in a SQL instruction such as forcing a value to be positive or negative.</p>"},"Classes/ADSQLWhenExpression.html":{"name":"ADSQLWhenExpression","abstract":"<p>Defines a when clause using in a CASE clause in a SQL instruction.</p>"},"Classes/ADSQLJoinClause.html":{"name":"ADSQLJoinClause","abstract":"<p>Holds the source table or table group for a SQL SELECT statement. If the <code>type</code> is <code>none</code> this is a single table name and not a join between two (or more) tables.</p>"},"adp-enumerations.html":{"name":"ADP Enumerations"},"sqlite-codeable.html":{"name":"SQLite Codeable"},"sqlite-decodable.html":{"name":"SQLite Decodable"},"asp-expressions.html":{"name":"ASP Expressions"},"adp-protocols.html":{"name":"ADP Protocols"},"spon-encodable.html":{"name":"SPON Encodable"},"action-data-providers.html":{"name":"Action Data Providers"},"asp-shared-elements.html":{"name":"ASP Shared Elements"},"asp-protocols.html":{"name":"ASP Protocols"},"adp-shared-elements.html":{"name":"ADP Shared Elements"},"action-sql-parser.html":{"name":"Action SQL Parser"},"asp-instructions.html":{"name":"ASP Instructions"},"asp-enumerations.html":{"name":"ASP Enumerations"},"spon-decodable.html":{"name":"SPON Decodable"},"spon-codeable.html":{"name":"SPON Codeable"},"sqlite-encodeable.html":{"name":"SQLite Encodeable"},"Guides.html":{"name":"Guides","abstract":"<p>The following guides are available globally.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global%20Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}